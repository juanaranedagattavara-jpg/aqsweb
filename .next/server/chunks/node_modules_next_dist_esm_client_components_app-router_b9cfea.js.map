{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/next/dist/esm/client/components/app-router.js"],"sourcesContent":["\"use client\";\n\nimport React, { use, useEffect, useMemo, useCallback, startTransition, useInsertionEffect } from \"react\";\nimport { AppRouterContext, LayoutRouterContext, GlobalLayoutRouterContext, CacheStates } from \"../../shared/lib/app-router-context.shared-runtime\";\nimport { reducer } from \"./router-reducer/router-reducer\";\nimport { ACTION_FAST_REFRESH, ACTION_NAVIGATE, ACTION_PREFETCH, ACTION_REFRESH, ACTION_RESTORE, ACTION_SERVER_ACTION, ACTION_SERVER_PATCH, PrefetchKind } from \"./router-reducer/router-reducer-types\";\nimport { createHrefFromUrl } from \"./router-reducer/create-href-from-url\";\nimport { SearchParamsContext, PathnameContext } from \"../../shared/lib/hooks-client-context.shared-runtime\";\nimport { useReducerWithReduxDevtools } from \"./use-reducer-with-devtools\";\nimport { ErrorBoundary } from \"./error-boundary\";\nimport { createInitialRouterState } from \"./router-reducer/create-initial-router-state\";\nimport { isBot } from \"../../shared/lib/router/utils/is-bot\";\nimport { addBasePath } from \"../add-base-path\";\nimport { AppRouterAnnouncer } from \"./app-router-announcer\";\nimport { RedirectBoundary } from \"./redirect-boundary\";\nimport { findHeadInCache } from \"./router-reducer/reducers/find-head-in-cache\";\nimport { createInfinitePromise } from \"./infinite-promise\";\nimport { NEXT_RSC_UNION_QUERY } from \"./app-router-headers\";\nimport { removeBasePath } from \"../remove-base-path\";\nimport { hasBasePath } from \"../has-base-path\";\nconst isServer = typeof window === \"undefined\";\n// Ensure the initialParallelRoutes are not combined because of double-rendering in the browser with Strict Mode.\nlet initialParallelRoutes = isServer ? null : new Map();\nlet globalServerActionDispatcher = null;\nexport function getServerActionDispatcher() {\n    return globalServerActionDispatcher;\n}\nlet globalMutable = {\n    refresh: ()=>{}\n};\nexport function urlToUrlWithoutFlightMarker(url) {\n    const urlWithoutFlightParameters = new URL(url, location.origin);\n    urlWithoutFlightParameters.searchParams.delete(NEXT_RSC_UNION_QUERY);\n    if (process.env.NODE_ENV === \"production\") {\n        if (process.env.__NEXT_CONFIG_OUTPUT === \"export\" && urlWithoutFlightParameters.pathname.endsWith(\".txt\")) {\n            const { pathname } = urlWithoutFlightParameters;\n            const length = pathname.endsWith(\"/index.txt\") ? 10 : 4;\n            // Slice off `/index.txt` or `.txt` from the end of the pathname\n            urlWithoutFlightParameters.pathname = pathname.slice(0, -length);\n        }\n    }\n    return urlWithoutFlightParameters;\n}\nfunction isExternalURL(url) {\n    return url.origin !== window.location.origin;\n}\nfunction HistoryUpdater(param) {\n    let { tree, pushRef, canonicalUrl, sync } = param;\n    useInsertionEffect(()=>{\n        // Identifier is shortened intentionally.\n        // __NA is used to identify if the history entry can be handled by the app-router.\n        // __N is used to identify if the history entry can be handled by the old router.\n        const historyState = {\n            __NA: true,\n            tree\n        };\n        if (pushRef.pendingPush && createHrefFromUrl(new URL(window.location.href)) !== canonicalUrl) {\n            // This intentionally mutates React state, pushRef is overwritten to ensure additional push/replace calls do not trigger an additional history entry.\n            pushRef.pendingPush = false;\n            window.history.pushState(historyState, \"\", canonicalUrl);\n        } else {\n            window.history.replaceState(historyState, \"\", canonicalUrl);\n        }\n        sync();\n    }, [\n        tree,\n        pushRef,\n        canonicalUrl,\n        sync\n    ]);\n    return null;\n}\nconst createEmptyCacheNode = ()=>({\n        status: CacheStates.LAZY_INITIALIZED,\n        data: null,\n        subTreeData: null,\n        parallelRoutes: new Map()\n    });\nfunction useServerActionDispatcher(dispatch) {\n    const serverActionDispatcher = useCallback((actionPayload)=>{\n        startTransition(()=>{\n            dispatch({\n                ...actionPayload,\n                type: ACTION_SERVER_ACTION,\n                mutable: {\n                    globalMutable\n                },\n                cache: createEmptyCacheNode()\n            });\n        });\n    }, [\n        dispatch\n    ]);\n    globalServerActionDispatcher = serverActionDispatcher;\n}\n/**\n * Server response that only patches the cache and tree.\n */ function useChangeByServerResponse(dispatch) {\n    return useCallback((previousTree, flightData, overrideCanonicalUrl)=>{\n        startTransition(()=>{\n            dispatch({\n                type: ACTION_SERVER_PATCH,\n                flightData,\n                previousTree,\n                overrideCanonicalUrl,\n                cache: createEmptyCacheNode(),\n                mutable: {\n                    globalMutable\n                }\n            });\n        });\n    }, [\n        dispatch\n    ]);\n}\nfunction useNavigate(dispatch) {\n    return useCallback((href, navigateType, forceOptimisticNavigation, shouldScroll)=>{\n        const url = new URL(addBasePath(href), location.href);\n        globalMutable.pendingNavigatePath = createHrefFromUrl(url);\n        return dispatch({\n            type: ACTION_NAVIGATE,\n            url,\n            isExternalUrl: isExternalURL(url),\n            locationSearch: location.search,\n            forceOptimisticNavigation,\n            shouldScroll: shouldScroll != null ? shouldScroll : true,\n            navigateType,\n            cache: createEmptyCacheNode(),\n            mutable: {\n                globalMutable\n            }\n        });\n    }, [\n        dispatch\n    ]);\n}\n/**\n * The global router that wraps the application components.\n */ function Router(param) {\n    let { buildId, initialHead, initialTree, initialCanonicalUrl, children, assetPrefix } = param;\n    const initialState = useMemo(()=>createInitialRouterState({\n            buildId,\n            children,\n            initialCanonicalUrl,\n            initialTree,\n            initialParallelRoutes,\n            isServer,\n            location: !isServer ? window.location : null,\n            initialHead\n        }), [\n        buildId,\n        children,\n        initialCanonicalUrl,\n        initialTree,\n        initialHead\n    ]);\n    const [{ tree, cache, prefetchCache, pushRef, focusAndScrollRef, canonicalUrl, nextUrl }, dispatch, sync] = useReducerWithReduxDevtools(reducer, initialState);\n    useEffect(()=>{\n        // Ensure initialParallelRoutes is cleaned up from memory once it's used.\n        initialParallelRoutes = null;\n    }, []);\n    // Add memoized pathname/query for useSearchParams and usePathname.\n    const { searchParams, pathname } = useMemo(()=>{\n        const url = new URL(canonicalUrl, typeof window === \"undefined\" ? \"http://n\" : window.location.href);\n        return {\n            // This is turned into a readonly class in `useSearchParams`\n            searchParams: url.searchParams,\n            pathname: hasBasePath(url.pathname) ? removeBasePath(url.pathname) : url.pathname\n        };\n    }, [\n        canonicalUrl\n    ]);\n    const changeByServerResponse = useChangeByServerResponse(dispatch);\n    const navigate = useNavigate(dispatch);\n    useServerActionDispatcher(dispatch);\n    /**\n   * The app router that is exposed through `useRouter`. It's only concerned with dispatching actions to the reducer, does not hold state.\n   */ const appRouter = useMemo(()=>{\n        const routerInstance = {\n            back: ()=>window.history.back(),\n            forward: ()=>window.history.forward(),\n            prefetch: (href, options)=>{\n                // Don't prefetch for bots as they don't navigate.\n                // Don't prefetch during development (improves compilation performance)\n                if (isBot(window.navigator.userAgent) || process.env.NODE_ENV === \"development\") {\n                    return;\n                }\n                const url = new URL(addBasePath(href), location.href);\n                // External urls can't be prefetched in the same way.\n                if (isExternalURL(url)) {\n                    return;\n                }\n                startTransition(()=>{\n                    var _options_kind;\n                    dispatch({\n                        type: ACTION_PREFETCH,\n                        url,\n                        kind: (_options_kind = options == null ? void 0 : options.kind) != null ? _options_kind : PrefetchKind.FULL\n                    });\n                });\n            },\n            replace: (href, options)=>{\n                if (options === void 0) options = {};\n                startTransition(()=>{\n                    var _options_scroll;\n                    navigate(href, \"replace\", Boolean(options.forceOptimisticNavigation), (_options_scroll = options.scroll) != null ? _options_scroll : true);\n                });\n            },\n            push: (href, options)=>{\n                if (options === void 0) options = {};\n                startTransition(()=>{\n                    var _options_scroll;\n                    navigate(href, \"push\", Boolean(options.forceOptimisticNavigation), (_options_scroll = options.scroll) != null ? _options_scroll : true);\n                });\n            },\n            refresh: ()=>{\n                startTransition(()=>{\n                    dispatch({\n                        type: ACTION_REFRESH,\n                        cache: createEmptyCacheNode(),\n                        mutable: {\n                            globalMutable\n                        },\n                        origin: window.location.origin\n                    });\n                });\n            },\n            // @ts-ignore we don't want to expose this method at all\n            fastRefresh: ()=>{\n                if (process.env.NODE_ENV !== \"development\") {\n                    throw new Error(\"fastRefresh can only be used in development mode. Please use refresh instead.\");\n                } else {\n                    startTransition(()=>{\n                        dispatch({\n                            type: ACTION_FAST_REFRESH,\n                            cache: createEmptyCacheNode(),\n                            mutable: {\n                                globalMutable\n                            },\n                            origin: window.location.origin\n                        });\n                    });\n                }\n            }\n        };\n        return routerInstance;\n    }, [\n        dispatch,\n        navigate\n    ]);\n    useEffect(()=>{\n        // Exists for debugging purposes. Don't use in application code.\n        if (window.next) {\n            window.next.router = appRouter;\n        }\n    }, [\n        appRouter\n    ]);\n    useEffect(()=>{\n        globalMutable.refresh = appRouter.refresh;\n    }, [\n        appRouter.refresh\n    ]);\n    if (process.env.NODE_ENV !== \"production\") {\n        // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useEffect(()=>{\n            // Add `window.nd` for debugging purposes.\n            // This is not meant for use in applications as concurrent rendering will affect the cache/tree/router.\n            // @ts-ignore this is for debugging\n            window.nd = {\n                router: appRouter,\n                cache,\n                prefetchCache,\n                tree\n            };\n        }, [\n            appRouter,\n            cache,\n            prefetchCache,\n            tree\n        ]);\n    }\n    useEffect(()=>{\n        // If the app is restored from bfcache, it's possible that\n        // pushRef.mpaNavigation is true, which would mean that any re-render of this component\n        // would trigger the mpa navigation logic again from the lines below.\n        // This will restore the router to the initial state in the event that the app is restored from bfcache.\n        function handlePageShow(event) {\n            var _window_history_state;\n            if (!event.persisted || !((_window_history_state = window.history.state) == null ? void 0 : _window_history_state.tree)) return;\n            dispatch({\n                type: ACTION_RESTORE,\n                url: new URL(window.location.href),\n                tree: window.history.state.tree\n            });\n        }\n        window.addEventListener(\"pageshow\", handlePageShow);\n        return ()=>{\n            window.removeEventListener(\"pageshow\", handlePageShow);\n        };\n    }, [\n        dispatch\n    ]);\n    // When mpaNavigation flag is set do a hard navigation to the new url.\n    // Infinitely suspend because we don't actually want to rerender any child\n    // components with the new URL and any entangled state updates shouldn't\n    // commit either (eg: useTransition isPending should stay true until the page\n    // unloads).\n    //\n    // This is a side effect in render. Don't try this at home, kids. It's\n    // probably safe because we know this is a singleton component and it's never\n    // in <Offscreen>. At least I hope so. (It will run twice in dev strict mode,\n    // but that's... fine?)\n    if (pushRef.mpaNavigation) {\n        // if there's a re-render, we don't want to trigger another redirect if one is already in flight to the same URL\n        if (globalMutable.pendingMpaPath !== canonicalUrl) {\n            const location1 = window.location;\n            if (pushRef.pendingPush) {\n                location1.assign(canonicalUrl);\n            } else {\n                location1.replace(canonicalUrl);\n            }\n            globalMutable.pendingMpaPath = canonicalUrl;\n        }\n        // TODO-APP: Should we listen to navigateerror here to catch failed\n        // navigations somehow? And should we call window.stop() if a SPA navigation\n        // should interrupt an MPA one?\n        use(createInfinitePromise());\n    }\n    /**\n   * Handle popstate event, this is used to handle back/forward in the browser.\n   * By default dispatches ACTION_RESTORE, however if the history entry was not pushed/replaced by app-router it will reload the page.\n   * That case can happen when the old router injected the history entry.\n   */ const onPopState = useCallback((param)=>{\n        let { state } = param;\n        if (!state) {\n            // TODO-APP: this case only happens when pushState/replaceState was called outside of Next.js. It should probably reload the page in this case.\n            return;\n        }\n        // This case happens when the history entry was pushed by the `pages` router.\n        if (!state.__NA) {\n            window.location.reload();\n            return;\n        }\n        // @ts-ignore useTransition exists\n        // TODO-APP: Ideally the back button should not use startTransition as it should apply the updates synchronously\n        // Without startTransition works if the cache is there for this path\n        startTransition(()=>{\n            dispatch({\n                type: ACTION_RESTORE,\n                url: new URL(window.location.href),\n                tree: state.tree\n            });\n        });\n    }, [\n        dispatch\n    ]);\n    // Register popstate event to call onPopstate.\n    useEffect(()=>{\n        window.addEventListener(\"popstate\", onPopState);\n        return ()=>{\n            window.removeEventListener(\"popstate\", onPopState);\n        };\n    }, [\n        onPopState\n    ]);\n    const head = useMemo(()=>{\n        return findHeadInCache(cache, tree[1]);\n    }, [\n        cache,\n        tree\n    ]);\n    let content = /*#__PURE__*/ React.createElement(RedirectBoundary, null, head, cache.subTreeData, /*#__PURE__*/ React.createElement(AppRouterAnnouncer, {\n        tree: tree\n    }));\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof window !== \"undefined\") {\n            const DevRootNotFoundBoundary = require(\"./dev-root-not-found-boundary\").DevRootNotFoundBoundary;\n            content = /*#__PURE__*/ React.createElement(DevRootNotFoundBoundary, null, content);\n        }\n        const HotReloader = require(\"./react-dev-overlay/hot-reloader-client\").default;\n        content = /*#__PURE__*/ React.createElement(HotReloader, {\n            assetPrefix: assetPrefix\n        }, content);\n    }\n    return /*#__PURE__*/ React.createElement(React.Fragment, null, /*#__PURE__*/ React.createElement(HistoryUpdater, {\n        tree: tree,\n        pushRef: pushRef,\n        canonicalUrl: canonicalUrl,\n        sync: sync\n    }), /*#__PURE__*/ React.createElement(PathnameContext.Provider, {\n        value: pathname\n    }, /*#__PURE__*/ React.createElement(SearchParamsContext.Provider, {\n        value: searchParams\n    }, /*#__PURE__*/ React.createElement(GlobalLayoutRouterContext.Provider, {\n        value: {\n            buildId,\n            changeByServerResponse,\n            tree,\n            focusAndScrollRef,\n            nextUrl\n        }\n    }, /*#__PURE__*/ React.createElement(AppRouterContext.Provider, {\n        value: appRouter\n    }, /*#__PURE__*/ React.createElement(LayoutRouterContext.Provider, {\n        value: {\n            childNodes: cache.parallelRoutes,\n            tree: tree,\n            // Root node always has `url`\n            // Provided in AppTreeContext to ensure it can be overwritten in layout-router\n            url: canonicalUrl\n        }\n    }, content))))));\n}\nexport default function AppRouter(props) {\n    const { globalErrorComponent, ...rest } = props;\n    return /*#__PURE__*/ React.createElement(ErrorBoundary, {\n        errorComponent: globalErrorComponent\n    }, /*#__PURE__*/ React.createElement(Router, rest));\n}\n\n//# sourceMappingURL=app-router.js.map"],"names":[],"mappings":"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"}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}