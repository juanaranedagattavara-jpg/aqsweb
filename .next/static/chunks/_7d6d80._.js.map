{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/dashboard-data.ts"],"sourcesContent":["export interface DashboardCard {\r\n  id: string\r\n  title: string\r\n  description: string\r\n  type: string\r\n  features: string[]\r\n}\r\n\r\nexport const dashboardCards: DashboardCard[] = [\r\n  {\r\n    id: 'analitico',\r\n    title: 'Dashboard Analítico',\r\n    type: 'analitico',\r\n    description: 'Monitoreo en tiempo real de métricas clave de comercio exterior con análisis profundo de datos y tendencias del mercado.',\r\n    features: [\r\n      'Volúmenes de exportación por región',\r\n      'Tendencias de precios y demanda',\r\n      'Análisis de competencia',\r\n      'Indicadores de rendimiento'\r\n    ]\r\n  },\r\n  {\r\n    id: 'tendencias',\r\n    title: 'Dashboard de Tendencias',\r\n    type: 'tendencias',\r\n    description: 'Visualización dinámica de patrones y flujos del mercado con predicciones estacionales y alertas de oportunidades.',\r\n    features: [\r\n      'Análisis de ondas de demanda',\r\n      'Predicciones estacionales',\r\n      'Cambios en preferencias del mercado',\r\n      'Alertas de oportunidades'\r\n    ]\r\n  },\r\n  {\r\n    id: 'geometrico',\r\n    title: 'Dashboard Geométrico',\r\n    type: 'geometrico',\r\n    description: 'Representación estructural de datos complejos con mapeo de relaciones comerciales y análisis de clusters.',\r\n    features: [\r\n      'Mapeo de relaciones comerciales',\r\n      'Análisis de clusters de mercado',\r\n      'Patrones de distribución geográfica',\r\n      'Segmentación de clientes'\r\n    ]\r\n  },\r\n  {\r\n    id: 'redes',\r\n    title: 'Dashboard de Redes',\r\n    type: 'redes',\r\n    description: 'Análisis de conexiones y flujos comerciales con mapeo de cadenas de suministro y socios comerciales.',\r\n    features: [\r\n      'Mapeo de cadenas de suministro',\r\n      'Análisis de socios comerciales',\r\n      'Flujos de capital y mercancías',\r\n      'Identificación de cuellos de botella'\r\n    ]\r\n  },\r\n  {\r\n    id: 'mercado',\r\n    title: 'Dashboard de Mercado',\r\n    type: 'mercado',\r\n    description: 'Análisis completo del mercado con métricas de participación, segmentación y oportunidades de crecimiento.',\r\n    features: [\r\n      'Market share por empresa',\r\n      'Segmentación de mercados',\r\n      'Análisis de productos',\r\n      'Oportunidades de expansión'\r\n    ]\r\n  },\r\n  {\r\n    id: 'competencia',\r\n    title: 'Dashboard de Competencia',\r\n    type: 'competencia',\r\n    description: 'Monitoreo inteligente de la competencia con análisis de posicionamiento y estrategias competitivas.',\r\n    features: [\r\n      'Análisis de posicionamiento',\r\n      'Estrategias competitivas',\r\n      'Benchmarking de rendimiento',\r\n      'Alertas de movimientos'\r\n    ]\r\n  }\r\n]\r\n"],"names":[],"mappings":";;;AAQO,MAAM,iBAAkC;IAC7C;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,aAAa;QACb,UAAU;YACR;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,aAAa;QACb,UAAU;YACR;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,aAAa;QACb,UAAU;YACR;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,aAAa;QACb,UAAU;YACR;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,aAAa;QACb,UAAU;YACR;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,aAAa;QACb,UAAU;YACR;YACA;YACA;YACA;SACD;IACH;CACD"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n\r\n// Función para generar IDs únicos\r\nexport function generateId(prefix = 'id'): string {\r\n  return `${prefix}-${Math.random().toString(36).substr(2, 9)}`\r\n}\r\n\r\n// Función para debounce\r\nexport function debounce<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  wait: number\r\n): (...args: Parameters<T>) => void {\r\n  let timeout: NodeJS.Timeout\r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timeout)\r\n    timeout = setTimeout(() => func(...args), wait)\r\n  }\r\n}\r\n\r\n// Función para throttle\r\nexport function throttle<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  limit: number\r\n): (...args: Parameters<T>) => void {\r\n  let inThrottle: boolean\r\n  return (...args: Parameters<T>) => {\r\n    if (!inThrottle) {\r\n      func(...args)\r\n      inThrottle = true\r\n      setTimeout(() => inThrottle = false, limit)\r\n    }\r\n  }\r\n}\r\n\r\n// Función para formatear números\r\nexport function formatNumber(num: number, options?: Intl.NumberFormatOptions): string {\r\n  return new Intl.NumberFormat('es-ES', options).format(num)\r\n}\r\n\r\n// Función para formatear fechas\r\nexport function formatDate(date: Date | string, options?: Intl.DateTimeFormatOptions): string {\r\n  const dateObj = typeof date === 'string' ? new Date(date) : date\r\n  return new Intl.DateTimeFormat('es-ES', options).format(dateObj)\r\n}\r\n\r\n// Función para truncar texto\r\nexport function truncateText(text: string, maxLength: number): string {\r\n  if (text.length <= maxLength) return text\r\n  return text.slice(0, maxLength).trim() + '...'\r\n}\r\n\r\n// Función para capitalizar primera letra\r\nexport function capitalize(text: string): string {\r\n  return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase()\r\n}\r\n\r\n// Función para generar gradientes CSS\r\nexport function generateGradient(colors: string[], direction: 'to-r' | 'to-l' | 'to-t' | 'to-b' | 'to-tr' | 'to-tl' | 'to-br' | 'to-bl' = 'to-r'): string {\r\n  return `linear-gradient(${direction}, ${colors.join(', ')})`\r\n}\r\n\r\n// Función para validar email\r\nexport function isValidEmail(email: string): boolean {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n  return emailRegex.test(email)\r\n}\r\n\r\n// Función para validar URL\r\nexport function isValidUrl(url: string): boolean {\r\n  try {\r\n    new URL(url)\r\n    return true\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\n// Función para obtener el color de contraste\r\nexport function getContrastColor(hexColor: string): 'black' | 'white' {\r\n  const hex = hexColor.replace('#', '')\r\n  const r = parseInt(hex.substr(0, 2), 16)\r\n  const g = parseInt(hex.substr(2, 2), 16)\r\n  const b = parseInt(hex.substr(4, 2), 16)\r\n  const brightness = (r * 299 + g * 587 + b * 114) / 1000\r\n  return brightness > 128 ? 'black' : 'white'\r\n}\r\n\r\n// Función para generar hash simple\r\nexport function simpleHash(str: string): number {\r\n  let hash = 0\r\n  for (let i = 0; i < str.length; i++) {\r\n    const char = str.charCodeAt(i)\r\n    hash = ((hash << 5) - hash) + char\r\n    hash = hash & hash // Convert to 32bit integer\r\n  }\r\n  return Math.abs(hash)\r\n}\r\n\r\n// Función para detectar si está en viewport\r\nexport function isInViewport(element: Element): boolean {\r\n  const rect = element.getBoundingClientRect()\r\n  return (\r\n    rect.top >= 0 &&\r\n    rect.left >= 0 &&\r\n    rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth)\r\n  )\r\n}\r\n\r\n// Función para scroll suave\r\nexport function smoothScrollTo(element: Element | string, offset = 0): void {\r\n  const target = typeof element === 'string' ? document.querySelector(element) : element\r\n  if (target) {\r\n    const targetPosition = target.getBoundingClientRect().top + window.pageYOffset - offset\r\n    window.scrollTo({\r\n      top: targetPosition,\r\n      behavior: 'smooth'\r\n    })\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-full text-sm font-semibold transition-all duration-300 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-accent focus-visible:ring-offset-2 focus-visible:ring-offset-primary disabled:pointer-events-none disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-accent text-white shadow-glow-blue hover:shadow-glow-blue hover:scale-105\",\r\n        secondary: \"bg-transparent text-white border border-border hover:bg-white/5\",\r\n        outline: \"bg-transparent text-accent border-2 border-accent hover:bg-accent hover:text-white\",\r\n        ghost: \"bg-transparent text-white hover:bg-white/5\",\r\n        destructive: \"bg-red-600 text-white hover:bg-red-700\",\r\n        premium: \"bg-gradient-to-r from-accent to-accent-2 text-white shadow-glow-blue hover:shadow-glow-blue hover:scale-105\",\r\n      },\r\n      size: {\r\n        default: \"h-12 px-6 py-3\",\r\n        sm: \"h-9 px-4 py-2\",\r\n        lg: \"h-14 px-8 py-4 text-base\",\r\n        xl: \"h-16 px-10 py-5 text-lg\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAKA,MAAM,iBAAiB,oKACrB,qTACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,WAAW;YACX,SAAS;YACT,OAAO;YACP,aAAa;YACb,SAAS;QACX;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,uJAAM,UAAU,MAC7B,QAA0D;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACtD,MAAM,OAAO,iLAAiB;IAC9B,qBACE,iLAAC;QACC,WAAW,+GAAG,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/dashboard-carousel.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { ChevronLeft, ChevronRight, ArrowRight } from 'lucide-react'\r\nimport { Button } from './button'\r\nimport Link from 'next/link'\r\n\r\ninterface DashboardCard {\r\n  id: string\r\n  title: string\r\n  description: string\r\n  type: string\r\n  features: string[]\r\n}\r\n\r\ninterface DashboardCarouselProps {\r\n  cards: DashboardCard[]\r\n  title?: string\r\n  description?: string\r\n}\r\n\r\nexport function DashboardCarousel({ \r\n  cards, \r\n  title = \"Dashboards Disponibles\",\r\n  description = \"Explora nuestros dashboards interactivos diseñados para el comercio exterior\"\r\n}: DashboardCarouselProps) {\r\n  const [currentIndex, setCurrentIndex] = useState(0)\r\n  const [isAutoPlaying, setIsAutoPlaying] = useState(true)\r\n\r\n  // Auto-play functionality\r\n  useEffect(() => {\r\n    if (!isAutoPlaying) return\r\n\r\n    const interval = setInterval(() => {\r\n      setCurrentIndex((prev) => {\r\n        const nextIndex = prev + 3\r\n        return nextIndex >= cards.length ? 0 : nextIndex\r\n      })\r\n    }, 5000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [isAutoPlaying, cards.length])\r\n\r\n  const nextSlide = () => {\r\n    setCurrentIndex((prev) => {\r\n      const nextIndex = prev + 3\r\n      return nextIndex >= cards.length ? 0 : nextIndex\r\n    })\r\n    setIsAutoPlaying(false)\r\n  }\r\n\r\n  const prevSlide = () => {\r\n    setCurrentIndex((prev) => {\r\n      const prevIndex = prev - 3\r\n      return prevIndex < 0 ? Math.max(0, cards.length - 3) : prevIndex\r\n    })\r\n    setIsAutoPlaying(false)\r\n  }\r\n\r\n  const goToSlide = (index: number) => {\r\n    setCurrentIndex(index)\r\n    setIsAutoPlaying(false)\r\n  }\r\n\r\n  const pauseAutoPlay = () => setIsAutoPlaying(false)\r\n  const resumeAutoPlay = () => setIsAutoPlaying(true)\r\n\r\n  return (\r\n    <div className=\"w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n      {/* Header */}\r\n      <div className=\"text-center mb-12\">\r\n        <h2 className=\"text-3xl md:text-4xl font-bold text-white mb-4\">\r\n          {title}\r\n        </h2>\r\n        <p className=\"text-xl text-gray-300 max-w-2xl mx-auto\">\r\n          {description}\r\n        </p>\r\n      </div>\r\n\r\n      {/* Carousel Container */}\r\n      <div className=\"relative group\">\r\n        {/* Navigation Buttons */}\r\n        <button\r\n          onClick={prevSlide}\r\n          className=\"absolute left-4 top-1/2 -translate-y-1/2 z-10 w-12 h-12 bg-black/50 hover:bg-black/70 text-white rounded-full flex items-center justify-center transition-all duration-300 opacity-0 group-hover:opacity-100 backdrop-blur-sm border border-white/20\"\r\n          aria-label=\"Anterior slide\"\r\n        >\r\n          <ChevronLeft className=\"w-6 h-6\" />\r\n        </button>\r\n\r\n        <button\r\n          onClick={nextSlide}\r\n          className=\"absolute right-4 top-1/2 -translate-y-1/2 z-10 w-12 h-12 bg-black/50 hover:bg-black/70 text-white rounded-full flex items-center justify-center transition-all duration-300 opacity-0 group-hover:opacity-100 backdrop-blur-sm border border-white/20\"\r\n          aria-label=\"Siguiente slide\"\r\n        >\r\n          <ChevronRight className=\"w-6 h-6\" />\r\n        </button>\r\n\r\n        {/* Carousel Track */}\r\n        <div \r\n          className=\"overflow-hidden rounded-2xl\"\r\n          onMouseEnter={pauseAutoPlay}\r\n          onMouseLeave={resumeAutoPlay}\r\n        >\r\n          <div className=\"flex transition-transform duration-500 ease-out\">\r\n            <AnimatePresence mode=\"wait\">\r\n              <motion.div\r\n                key={currentIndex}\r\n                initial={{ opacity: 0, x: 100 }}\r\n                animate={{ opacity: 1, x: 0 }}\r\n                exit={{ opacity: 0, x: -100 }}\r\n                transition={{ duration: 0.5 }}\r\n                className=\"w-full flex-shrink-0\"\r\n              >\r\n                                 <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 p-6\">\r\n                   {/* Current slide cards */}\r\n                   {Array.from({ length: 3 }).map((_, index) => {\r\n                     const cardIndex = currentIndex + index\r\n                     const card = cards[cardIndex]\r\n                     \r\n                     if (!card) return null\r\n                     \r\n                     return (\r\n                       <motion.div\r\n                         key={`${currentIndex}-${index}`}\r\n                         initial={{ opacity: 0, y: 20 }}\r\n                         animate={{ opacity: 1, y: 0 }}\r\n                         transition={{ duration: 0.5, delay: index * 0.1 }}\r\n                         className=\"group/card\"\r\n                       >\r\n                      <div className=\"bg-gradient-to-br from-primary-900/20 to-primary-800/20 border border-primary-500/30 rounded-2xl p-6 h-full hover:scale-105 transition-all duration-300 cursor-pointer backdrop-blur-sm\">\r\n                        {/* Visual */}\r\n                        <div className=\"h-32 mb-4 rounded-lg bg-gradient-to-br from-primary-600/20 to-primary-400/20 border border-primary-500/30 flex items-center justify-center\">\r\n                          <div className=\"text-primary-400 text-4xl\">\r\n                            {card.type === 'analitico' && '📊'}\r\n                            {card.type === 'tendencias' && '🌊'}\r\n                            {card.type === 'geometrico' && '🔷'}\r\n                            {card.type === 'redes' && '🌐'}\r\n                            {card.type === 'mercado' && '📈'}\r\n                            {card.type === 'competencia' && '🎯'}\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Content */}\r\n                        <h3 className=\"text-xl font-bold text-white mb-3 group-hover/card:text-primary-400 transition-colors\">\r\n                          {card.title}\r\n                        </h3>\r\n                        <p className=\"text-gray-300 text-sm mb-4 line-clamp-3\">\r\n                          {card.description}\r\n                        </p>\r\n\r\n                                                 {/* CTA Button */}\r\n                         <Link href=\"/dashboard\" className=\"inline-flex items-center text-primary-400 hover:text-primary-300 transition-colors group-hover/card:text-primary-300\">\r\n                           <span className=\"text-sm font-medium\">Explorar Dashboard</span>\r\n                           <ArrowRight className=\"w-4 h-4 ml-2 group-hover/card:translate-x-1 transition-transform\" />\r\n                         </Link>\r\n                       </div>\r\n                     </motion.div>\r\n                   )\r\n                   })}\r\n                 </div>\r\n              </motion.div>\r\n            </AnimatePresence>\r\n          </div>\r\n        </div>\r\n\r\n                 {/* Dots Indicator */}\r\n         <div className=\"flex justify-center mt-8 space-x-2\">\r\n           {Array.from({ length: Math.ceil(cards.length / 3) }).map((_, index) => (\r\n             <button\r\n               key={index}\r\n               onClick={() => goToSlide(index * 3)}\r\n               className={`w-3 h-3 rounded-full transition-all duration-300 ${\r\n                 currentIndex === index * 3\r\n                   ? 'bg-primary-500 scale-125'\r\n                   : 'bg-gray-600 hover:bg-gray-500'\r\n               }`}\r\n               aria-label={`Ir al slide ${index + 1}`}\r\n             />\r\n           ))}\r\n         </div>\r\n\r\n                 {/* Progress Indicator */}\r\n         <div className=\"flex justify-center mt-6\">\r\n           <div className=\"text-sm text-gray-400\">\r\n             {Math.floor(currentIndex / 3) + 1} de {Math.ceil(cards.length / 3)}\r\n           </div>\r\n         </div>\r\n\r\n         {/* Auto-play Controls */}\r\n         <div className=\"flex justify-center mt-4 space-x-2\">\r\n           <button\r\n             onClick={pauseAutoPlay}\r\n             className={`px-3 py-1 text-xs rounded-full transition-all ${\r\n               !isAutoPlaying\r\n                 ? 'bg-primary-600 text-white'\r\n                 : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\r\n             }`}\r\n           >\r\n             Pausar\r\n           </button>\r\n           <button\r\n             onClick={resumeAutoPlay}\r\n             className={`px-3 py-1 text-xs rounded-full transition-all ${\r\n               isAutoPlaying\r\n                 ? 'bg-primary-600 text-white'\r\n                 : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\r\n             }`}\r\n           >\r\n             Reproducir\r\n           </button>\r\n         </div>\r\n      </div>\r\n\r\n      {/* CTA Section */}\r\n      <div className=\"text-center mt-12\">\r\n        <Link href=\"/dashboard\">\r\n          <Button variant=\"premium\" size=\"lg\" className=\"group\">\r\n            Ver Todos los Dashboards\r\n            <ArrowRight className=\"w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform\" />\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 660, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 665, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {\r\n  error?: boolean\r\n  success?: boolean\r\n}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, error, success, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"input w-full px-4 py-3 bg-primary-800 border border-border rounded-lg text-white placeholder-muted focus:outline-none focus:ring-2 focus:ring-accent focus:border-transparent transition-all duration-200\",\r\n          error && \"border-red-500 focus:ring-red-500\",\r\n          success && \"border-green-500 focus:ring-green-500\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;;;;;;;AASA,MAAM,sBAAQ,uJAAM,UAAU,MAC5B,QAAgD;QAA/C,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,OAAO;IAC5C,qBACE,iLAAC;QACC,MAAM;QACN,WAAW,+GACT,6MACA,SAAS,qCACT,WAAW,yCACX;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 694, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 699, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"card\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\"text-xl font-semibold text-white\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-muted leading-relaxed\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAGA,MAAM,qBAAO,uJAAM,UAAU,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;WACxB,iLAAC;QACC,KAAK;QACL,WAAW,+GACT,QACA;QAED,GAAG,KAAK;;;;;;AACV;;AAEH,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,uJAAM,UAAU,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;WACxB,iLAAC;QACC,KAAK;QACL,WAAW,+GAAG,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AACV;;AAEH,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,uJAAM,UAAU,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;WACxB,iLAAC;QACC,KAAK;QACL,WAAW,+GAAG,oCAAoC;QACjD,GAAG,KAAK;;;;;;AACV;;AAEH,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,uJAAM,UAAU,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;WACxB,iLAAC;QACC,KAAK;QACL,WAAW,+GAAG,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AACV;;AAEH,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,uJAAM,UAAU,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;WACxB,iLAAC;QAAI,KAAK;QAAK,WAAW,+GAAG,YAAY;QAAa,GAAG,KAAK;;;;;;AAAG;;AAEnE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,uJAAM,UAAU,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;WACxB,iLAAC;QACC,KAAK;QACL,WAAW,+GAAG,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AACV;;AAEH,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 812, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 817, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/solicitar-demo/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React, { useState } from 'react'\r\nimport Calendar from 'react-calendar'\r\nimport { format } from 'date-fns'\r\nimport { es } from 'date-fns/locale'\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { Input } from '@/components/ui/input'\r\nimport { Button } from '@/components/ui/button'\r\nimport { CalendarIcon, Clock, User, Mail, CheckCircle } from 'lucide-react'\r\nimport { FooterMinimal } from '@/components/layout/footer-minimal'\r\nimport { DashboardCarousel } from '@/components/ui/dashboard-carousel'\r\nimport { dashboardCards } from '@/lib/dashboard-data'\r\n\r\ntype ValuePiece = Date | null\r\ntype Value = ValuePiece | [ValuePiece, ValuePiece]\r\n\r\ninterface DemoFormData {\r\n  nombre: string\r\n  email: string\r\n  fecha: Date | null\r\n  hora: string\r\n}\r\n\r\nconst horasDisponibles = [\r\n  '09:00', '09:30', '10:00', '10:30', '11:00', '11:30',\r\n  '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00'\r\n]\r\n\r\nexport default function SolicitarDemoPage() {\r\n  const [formData, setFormData] = useState<DemoFormData>({\r\n    nombre: '',\r\n    email: '',\r\n    fecha: null,\r\n    hora: ''\r\n  })\r\n  const [isSubmitted, setIsSubmitted] = useState(false)\r\n  const [errors, setErrors] = useState<Partial<Record<keyof DemoFormData, string>>>({})\r\n\r\n  const handleInputChange = (field: keyof DemoFormData, value: string | Date) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }))\r\n    // Limpiar error del campo\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: undefined }))\r\n    }\r\n  }\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Partial<Record<keyof DemoFormData, string>> = {}\r\n\r\n    if (!formData.nombre.trim()) {\r\n      newErrors.nombre = 'El nombre es requerido'\r\n    }\r\n\r\n    if (!formData.email.trim()) {\r\n      newErrors.email = 'El email es requerido'\r\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\r\n      newErrors.email = 'El email no es válido'\r\n    }\r\n\r\n    if (!formData.fecha) {\r\n      newErrors.fecha = 'Selecciona una fecha'\r\n    }\r\n\r\n    if (!formData.hora) {\r\n      newErrors.hora = 'Selecciona una hora'\r\n    }\r\n\r\n    setErrors(newErrors)\r\n    return Object.keys(newErrors).length === 0\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (validateForm()) {\r\n      // Aquí puedes enviar los datos a tu API\r\n      console.log('Datos del demo:', formData)\r\n      setIsSubmitted(true)\r\n      \r\n      // Resetear formulario después de 3 segundos\r\n      setTimeout(() => {\r\n        setIsSubmitted(false)\r\n        setFormData({\r\n          nombre: '',\r\n          email: '',\r\n          fecha: null,\r\n          hora: ''\r\n        })\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  const tileDisabled = ({ date }: { date: Date }) => {\r\n    // Deshabilitar fines de semana y fechas pasadas\r\n    const today = new Date()\r\n    today.setHours(0, 0, 0, 0)\r\n    \r\n    return (\r\n      date < today ||\r\n      date.getDay() === 0 || // Domingo\r\n      date.getDay() === 6    // Sábado\r\n    )\r\n  }\r\n\r\n  if (isSubmitted) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-primary-900 via-primary-800 to-primary-900 flex items-center justify-center p-4\">\r\n        <Card className=\"w-full max-w-md text-center\">\r\n          <CardContent className=\"pt-6\">\r\n            <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\r\n            <h2 className=\"text-2xl font-bold text-white mb-2\">¡Demo Solicitado!</h2>\r\n            <p className=\"text-muted mb-4\">\r\n              Hemos recibido tu solicitud de demo. Te contactaremos pronto para confirmar los detalles.\r\n            </p>\r\n            <Button \r\n              onClick={() => setIsSubmitted(false)}\r\n              variant=\"outline\"\r\n              className=\"w-full\"\r\n            >\r\n              Solicitar Otro Demo\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-primary-900 via-primary-800 to-primary-900\">\r\n      {/* Header */}\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"text-center mb-12\">\r\n          <h1 className=\"text-4xl md:text-5xl font-bold text-white mb-4\">\r\n            Solicita tu Demo\r\n          </h1>\r\n          <p className=\"text-xl text-muted max-w-2xl mx-auto\">\r\n            Descubre cómo nuestra plataforma puede transformar tu negocio. \r\n            Agenda una demostración personalizada con nuestro equipo de expertos.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"grid lg:grid-cols-2 gap-8 max-w-6xl mx-auto\">\r\n          {/* Calendario */}\r\n          <Card className=\"bg-primary-800/50 border-border/50 backdrop-blur-sm\">\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2 text-white\">\r\n                <CalendarIcon className=\"w-5 h-5 text-accent\" />\r\n                Selecciona una Fecha\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Elige el día que mejor te convenga para tu demo\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"flex justify-center\">\r\n                <Calendar\r\n                  onChange={(value: Value) => {\r\n                    if (value instanceof Date) {\r\n                      handleInputChange('fecha', value)\r\n                    }\r\n                  }}\r\n                  value={formData.fecha}\r\n                  tileDisabled={tileDisabled}\r\n                  minDate={new Date()}\r\n                  maxDate={new Date(Date.now() + 30 * 24 * 60 * 60 * 1000)} // 30 días\r\n                  className=\"demo-calendar\"\r\n                />\r\n              </div>\r\n              {errors.fecha && (\r\n                <p className=\"text-red-400 text-sm mt-2\">{errors.fecha}</p>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Formulario */}\r\n          <Card className=\"bg-primary-800/50 border-border/50 backdrop-blur-sm\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-white\">Información de Contacto</CardTitle>\r\n              <CardDescription>\r\n                Completa tus datos para programar la demo\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n                {/* Nombre */}\r\n                <div>\r\n                  <label htmlFor=\"nombre\" className=\"block text-sm font-medium text-white mb-2\">\r\n                    <User className=\"w-4 h-4 inline mr-2\" />\r\n                    Nombre Completo\r\n                  </label>\r\n                  <Input\r\n                    id=\"nombre\"\r\n                    type=\"text\"\r\n                    placeholder=\"Tu nombre completo\"\r\n                    value={formData.nombre}\r\n                    onChange={(e) => handleInputChange('nombre', e.target.value)}\r\n                    error={!!errors.nombre}\r\n                  />\r\n                  {errors.nombre && (\r\n                    <p className=\"text-red-400 text-sm mt-1\">{errors.nombre}</p>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Email */}\r\n                <div>\r\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-white mb-2\">\r\n                    <Mail className=\"w-4 h-4 inline mr-2\" />\r\n                    Correo Electrónico\r\n                  </label>\r\n                  <Input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"tu@email.com\"\r\n                    value={formData.email}\r\n                    onChange={(e) => handleInputChange('email', e.target.value)}\r\n                    error={!!errors.email}\r\n                  />\r\n                  {errors.email && (\r\n                    <p className=\"text-red-400 text-sm mt-1\">{errors.email}</p>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Hora */}\r\n                <div>\r\n                  <label htmlFor=\"hora\" className=\"block text-sm font-medium text-white mb-2\">\r\n                    <Clock className=\"w-4 h-4 inline mr-2\" />\r\n                    Hora Preferida\r\n                  </label>\r\n                  <select\r\n                    id=\"hora\"\r\n                    value={formData.hora}\r\n                    onChange={(e) => handleInputChange('hora', e.target.value)}\r\n                    className=\"w-full px-4 py-3 bg-primary-800 border border-border rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-accent focus:border-transparent transition-all duration-200\"\r\n                  >\r\n                    <option value=\"\">Selecciona una hora</option>\r\n                    {horasDisponibles.map((hora) => (\r\n                      <option key={hora} value={hora}>\r\n                        {hora}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.hora && (\r\n                    <p className=\"text-red-400 text-sm mt-1\">{errors.hora}</p>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Fecha seleccionada */}\r\n                {formData.fecha && (\r\n                  <div className=\"p-4 bg-accent/10 border border-accent/20 rounded-lg\">\r\n                    <p className=\"text-sm text-muted mb-1\">Fecha seleccionada:</p>\r\n                    <p className=\"text-white font-medium\">\r\n                      {format(formData.fecha, 'EEEE, d \\'de\\' MMMM \\'de\\' yyyy', { locale: es })}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Botón de envío */}\r\n                <Button \r\n                  type=\"submit\" \r\n                  className=\"w-full h-14 text-lg font-semibold\"\r\n                  variant=\"premium\"\r\n                >\r\n                  Solicitar Demo\r\n                </Button>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n\r\n                 {/* Información adicional */}\r\n         <div className=\"mt-16 text-center\">\r\n           <div className=\"grid md:grid-cols-3 gap-8 max-w-4xl mx-auto\">\r\n             <div className=\"text-center\">\r\n               <div className=\"w-16 h-16 bg-accent/20 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                 <Clock className=\"w-8 h-8 text-accent\" />\r\n               </div>\r\n               <h3 className=\"text-xl font-semibold text-white mb-2\">Demo Personalizada</h3>\r\n               <p className=\"text-muted\">\r\n                 Adaptamos la demostración a tus necesidades específicas\r\n               </p>\r\n             </div>\r\n             <div className=\"text-center\">\r\n               <div className=\"w-16 h-16 bg-accent/20 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                 <User className=\"w-8 h-8 text-accent\" />\r\n               </div>\r\n               <h3 className=\"text-xl font-semibold text-white mb-2\">Experto Dedicado</h3>\r\n               <p className=\"text-muted\">\r\n                 Un especialista te guiará durante toda la sesión\r\n               </p>\r\n             </div>\r\n             <div className=\"text-center\">\r\n               <div className=\"w-16 h-16 bg-accent/20 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                 <CheckCircle className=\"w-8 h-8 text-accent\" />\r\n               </div>\r\n               <h3 className=\"text-xl font-semibold text-white mb-2\">Sin Compromiso</h3>\r\n               <p className=\"text-muted\">\r\n                 La demo es completamente gratuita y sin obligaciones\r\n               </p>\r\n             </div>\r\n           </div>\r\n         </div>\r\n\r\n         {/* Dashboard Carousel */}\r\n         <div className=\"mt-20\">\r\n           <DashboardCarousel \r\n             cards={dashboardCards}\r\n             title=\"Dashboards que Verás en tu Demo\"\r\n             description=\"Durante la demostración exploraremos estos dashboards especializados en comercio exterior\"\r\n           />\r\n         </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}