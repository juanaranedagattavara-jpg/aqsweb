{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n\r\n// Función para generar IDs únicos\r\nexport function generateId(prefix = 'id'): string {\r\n  return `${prefix}-${Math.random().toString(36).substr(2, 9)}`\r\n}\r\n\r\n// Función para debounce\r\nexport function debounce<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  wait: number\r\n): (...args: Parameters<T>) => void {\r\n  let timeout: NodeJS.Timeout\r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timeout)\r\n    timeout = setTimeout(() => func(...args), wait)\r\n  }\r\n}\r\n\r\n// Función para throttle\r\nexport function throttle<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  limit: number\r\n): (...args: Parameters<T>) => void {\r\n  let inThrottle: boolean\r\n  return (...args: Parameters<T>) => {\r\n    if (!inThrottle) {\r\n      func(...args)\r\n      inThrottle = true\r\n      setTimeout(() => inThrottle = false, limit)\r\n    }\r\n  }\r\n}\r\n\r\n// Función para formatear números\r\nexport function formatNumber(num: number, options?: Intl.NumberFormatOptions): string {\r\n  return new Intl.NumberFormat('es-ES', options).format(num)\r\n}\r\n\r\n// Función para formatear fechas\r\nexport function formatDate(date: Date | string, options?: Intl.DateTimeFormatOptions): string {\r\n  const dateObj = typeof date === 'string' ? new Date(date) : date\r\n  return new Intl.DateTimeFormat('es-ES', options).format(dateObj)\r\n}\r\n\r\n// Función para truncar texto\r\nexport function truncateText(text: string, maxLength: number): string {\r\n  if (text.length <= maxLength) return text\r\n  return text.slice(0, maxLength).trim() + '...'\r\n}\r\n\r\n// Función para capitalizar primera letra\r\nexport function capitalize(text: string): string {\r\n  return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase()\r\n}\r\n\r\n// Función para generar gradientes CSS\r\nexport function generateGradient(colors: string[], direction: 'to-r' | 'to-l' | 'to-t' | 'to-b' | 'to-tr' | 'to-tl' | 'to-br' | 'to-bl' = 'to-r'): string {\r\n  return `linear-gradient(${direction}, ${colors.join(', ')})`\r\n}\r\n\r\n// Función para validar email\r\nexport function isValidEmail(email: string): boolean {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n  return emailRegex.test(email)\r\n}\r\n\r\n// Función para validar URL\r\nexport function isValidUrl(url: string): boolean {\r\n  try {\r\n    new URL(url)\r\n    return true\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\n// Función para obtener el color de contraste\r\nexport function getContrastColor(hexColor: string): 'black' | 'white' {\r\n  const hex = hexColor.replace('#', '')\r\n  const r = parseInt(hex.substr(0, 2), 16)\r\n  const g = parseInt(hex.substr(2, 2), 16)\r\n  const b = parseInt(hex.substr(4, 2), 16)\r\n  const brightness = (r * 299 + g * 587 + b * 114) / 1000\r\n  return brightness > 128 ? 'black' : 'white'\r\n}\r\n\r\n// Función para generar hash simple\r\nexport function simpleHash(str: string): number {\r\n  let hash = 0\r\n  for (let i = 0; i < str.length; i++) {\r\n    const char = str.charCodeAt(i)\r\n    hash = ((hash << 5) - hash) + char\r\n    hash = hash & hash // Convert to 32bit integer\r\n  }\r\n  return Math.abs(hash)\r\n}\r\n\r\n// Función para detectar si está en viewport\r\nexport function isInViewport(element: Element): boolean {\r\n  const rect = element.getBoundingClientRect()\r\n  return (\r\n    rect.top >= 0 &&\r\n    rect.left >= 0 &&\r\n    rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth)\r\n  )\r\n}\r\n\r\n// Función para scroll suave\r\nexport function smoothScrollTo(element: Element | string, offset = 0): void {\r\n  const target = typeof element === 'string' ? document.querySelector(element) : element\r\n  if (target) {\r\n    const targetPosition = target.getBoundingClientRect().top + window.pageYOffset - offset\r\n    window.scrollTo({\r\n      top: targetPosition,\r\n      behavior: 'smooth'\r\n    })\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/dashboard/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { FooterMinimal } from \"@/components/layout/footer-minimal\"\r\n\r\n// Card Components\r\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {}\r\n\r\nfunction AnimatedCard({ className, ...props }: CardProps) {\r\n  return (\r\n    <div\r\n      role=\"region\"\r\n      aria-labelledby=\"card-title\"\r\n      aria-describedby=\"card-description\"\r\n      className={cn(\r\n        \"group/animated-card relative w-[380px] overflow-hidden rounded-2xl border border-zinc-200/50 bg-white/80 shadow-xl backdrop-blur-sm transition-all duration-500 hover:shadow-2xl hover:scale-105 dark:border-zinc-800/50 dark:bg-black/80\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardBody({ className, ...props }: CardProps) {\r\n  return (\r\n    <div\r\n      role=\"group\"\r\n      className={cn(\r\n        \"flex flex-col space-y-2 border-t border-zinc-200/30 p-6 dark:border-zinc-800/30\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\ninterface CardTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {}\r\n\r\nfunction CardTitle({ className, ...props }: CardTitleProps) {\r\n  return (\r\n    <h3\r\n      className={cn(\r\n        \"text-xl leading-none font-bold tracking-tight text-black dark:text-white\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\ninterface CardDescriptionProps extends React.HTMLAttributes<HTMLParagraphElement> {}\r\n\r\nfunction CardDescription({ className, ...props }: CardDescriptionProps) {\r\n  return (\r\n    <p\r\n      className={cn(\r\n        \"text-sm leading-relaxed text-neutral-600 dark:text-neutral-300\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardVisual({ className, ...props }: CardProps) {\r\n  return (\r\n    <div\r\n      className={cn(\"h-[160px] w-[320px] overflow-hidden\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\n// Visual Component Props\r\ninterface VisualProps {\r\n  mainColor?: string\r\n  secondaryColor?: string\r\n  gridColor?: string\r\n}\r\n\r\ninterface LayerProps {\r\n  color: string\r\n  secondaryColor?: string\r\n  hovered?: boolean\r\n}\r\n\r\n// Shared Components\r\nconst EllipseGradient: React.FC<{ color: string }> = ({ color }) => {\r\n  return (\r\n    <div className=\"absolute inset-0 z-[5] flex h-full w-full items-center justify-center\">\r\n              <svg\r\n          width=\"320\"\r\n          height=\"160\"\r\n          viewBox=\"0 0 320 160\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n                  <rect width=\"320\" height=\"160\" fill=\"url(#paint0_radial)\" />\r\n        <defs>\r\n          <radialGradient\r\n            id=\"paint0_radial\"\r\n            cx=\"0\"\r\n            cy=\"0\"\r\n            r=\"1\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n            gradientTransform=\"translate(190 100) rotate(90) scale(100 190)\"\r\n          >\r\n            <stop stopColor={color} stopOpacity=\"0.3\" />\r\n            <stop offset=\"0.4\" stopColor={color} stopOpacity=\"0.2\" />\r\n            <stop offset=\"1\" stopOpacity=\"0\" />\r\n          </radialGradient>\r\n        </defs>\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst GridLayer: React.FC<{ color: string }> = ({ color }) => {\r\n  return (\r\n    <div\r\n      style={{ \"--grid-color\": color } as React.CSSProperties}\r\n      className=\"pointer-events-none absolute inset-0 z-[4] h-full w-full bg-transparent bg-[linear-gradient(to_right,var(--grid-color)_1px,transparent_1px),linear-gradient(to_bottom,var(--grid-color)_1px,transparent_1px)] [mask-image:radial-gradient(ellipse_60%_60%_at_50%_50%,#000_70%,transparent_100%)] bg-[size:20px_20px] bg-center opacity-60\"\r\n    />\r\n  )\r\n}\r\n\r\n// Visual 1: Analytics Card (Enhanced Original)\r\nconst AnalyticsVisual: React.FC<VisualProps> = ({\r\n  mainColor = \"#8b5cf6\",\r\n  secondaryColor = \"#fbbf24\",\r\n  gridColor = \"#80808020\",\r\n}) => {\r\n  const [hovered, setHovered] = useState(false)\r\n  const [mainProgress, setMainProgress] = useState(15)\r\n  const [secondaryProgress, setSecondaryProgress] = useState(0)\r\n\r\n  useEffect(() => {\r\n    let timeout: NodeJS.Timeout\r\n\r\n    if (hovered) {\r\n      timeout = setTimeout(() => {\r\n        setMainProgress(75)\r\n        setSecondaryProgress(100)\r\n      }, 300)\r\n    } else {\r\n      setMainProgress(15)\r\n      setSecondaryProgress(0)\r\n    }\r\n\r\n    return () => clearTimeout(timeout)\r\n  }, [hovered])\r\n\r\n  const radius = 45\r\n  const circumference = 2 * Math.PI * radius\r\n  const mainDashoffset = circumference - (mainProgress / 100) * circumference\r\n  const secondaryDashoffset = circumference - (secondaryProgress / 100) * circumference\r\n\r\n  const techItems = [\r\n    { id: 1, translateX: \"100\", translateY: \"50\", text: \"React\", icon: \"⚛️\" },\r\n    { id: 2, translateX: \"100\", translateY: \"-50\", text: \"Next.js\", icon: \"🔷\" },\r\n    { id: 3, translateX: \"120\", translateY: \"0\", text: \"TypeScript\", icon: \"📘\" },\r\n    { id: 4, translateX: \"-120\", translateY: \"0\", text: \"Tailwind\", icon: \"💨\" },\r\n    { id: 5, translateX: \"-100\", translateY: \"50\", text: \"Prisma\", icon: \"🔺\" },\r\n    { id: 6, translateX: \"-100\", translateY: \"-50\", text: \"GraphQL\", icon: \"🌸\" },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"absolute inset-0 z-20\"\r\n        onMouseEnter={() => setHovered(true)}\r\n        onMouseLeave={() => setHovered(false)}\r\n      />\r\n      <div className=\"relative h-[200px] w-[380px] overflow-hidden rounded-t-2xl\">\r\n        {/* Main Chart */}\r\n        <div className=\"ease-[cubic-bezier(0.6, 0.6, 0, 1)] absolute top-0 left-0 z-[7] flex h-[320px] w-[320px] transform items-center justify-center transition-transform duration-700 group-hover/animated-card:-translate-y-[80px] group-hover/animated-card:scale-110\">\r\n          <div className=\"relative flex h-[140px] w-[140px] items-center justify-center\">\r\n            <svg width=\"140\" height=\"140\" viewBox=\"0 0 100 100\">\r\n              <circle\r\n                cx=\"50\"\r\n                cy=\"50\"\r\n                r={radius}\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"8\"\r\n                fill=\"transparent\"\r\n                opacity={0.1}\r\n                className=\"text-zinc-400 dark:text-zinc-600\"\r\n              />\r\n              <circle\r\n                cx=\"50\"\r\n                cy=\"50\"\r\n                r={radius}\r\n                stroke={secondaryColor}\r\n                strokeWidth=\"12\"\r\n                fill=\"transparent\"\r\n                strokeDasharray={circumference}\r\n                strokeDashoffset={secondaryDashoffset}\r\n                transform=\"rotate(-90 50 50)\"\r\n                style={{\r\n                  transition: \"stroke-dashoffset 0.7s cubic-bezier(0.6, 0.6, 0, 1)\",\r\n                }}\r\n              />\r\n              <circle\r\n                cx=\"50\"\r\n                cy=\"50\"\r\n                r={radius}\r\n                stroke={mainColor}\r\n                strokeWidth=\"12\"\r\n                fill=\"transparent\"\r\n                strokeDasharray={circumference}\r\n                strokeDashoffset={mainDashoffset}\r\n                transform=\"rotate(-90 50 50)\"\r\n                style={{\r\n                  transition: \"stroke-dashoffset 0.7s cubic-bezier(0.6, 0.6, 0, 1)\",\r\n                }}\r\n              />\r\n            </svg>\r\n            <div className=\"absolute inset-0 flex items-center justify-center\">\r\n              <span className=\"text-2xl font-bold text-black dark:text-white\">\r\n                {hovered ? (secondaryProgress > 75 ? secondaryProgress : mainProgress) : mainProgress}%\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Info Badge */}\r\n        <div className=\"ease-[cubic-bezier(0.6, 0.6, 0, 1)] absolute inset-0 z-[6] flex w-[380px] translate-y-0 items-start justify-center bg-transparent p-6 transition-transform duration-700 group-hover/animated-card:translate-y-full\">\r\n          <div className=\"ease-[cubic-bezier(0.6, 0.6, 0, 1)] rounded-lg border border-zinc-200/40 bg-white/40 px-4 py-3 opacity-100 backdrop-blur-md transition-opacity duration-500 group-hover/animated-card:opacity-0 dark:border-zinc-800/40 dark:bg-black/40\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"h-3 w-3 shrink-0 rounded-full\" style={{ backgroundColor: mainColor }} />\r\n              <p className=\"text-sm font-medium text-black dark:text-white\">\r\n                Performance Analytics\r\n              </p>\r\n            </div>\r\n            <p className=\"mt-1 text-xs text-neutral-600 dark:text-neutral-300\">\r\n              Real-time metrics and insights\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tech Stack Items */}\r\n        <div className=\"ease-[cubic-bezier(0.6, 0.6, 0, 1)] absolute inset-0 z-[7] flex items-center justify-center opacity-0 transition-opacity duration-700 group-hover/animated-card:opacity-100\">\r\n          {techItems.map((item, index) => (\r\n            <div\r\n              key={item.id}\r\n              className=\"ease-[cubic-bezier(0.6, 0.6, 0, 1)] absolute flex items-center justify-center gap-2 rounded-full border border-zinc-200/60 bg-white/80 px-3 py-1.5 backdrop-blur-md transition-all duration-700 dark:border-zinc-800/60 dark:bg-black/80\"\r\n              style={{\r\n                transform: hovered\r\n                  ? `translate(${item.translateX}px, ${item.translateY}px)`\r\n                  : \"translate(0px, 0px)\",\r\n                transitionDelay: `${index * 100}ms`,\r\n              }}\r\n            >\r\n              <span className=\"text-sm\">{item.icon}</span>\r\n              <span className=\"text-xs font-medium text-black dark:text-white\">\r\n                {item.text}\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <EllipseGradient color={mainColor} />\r\n        <GridLayer color={gridColor} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// Visual 2: Wave Animation Card\r\nconst WaveVisual: React.FC<VisualProps> = ({\r\n  mainColor = \"#06b6d4\",\r\n  secondaryColor = \"#8b5cf6\",\r\n  gridColor = \"#80808020\",\r\n}) => {\r\n  const [hovered, setHovered] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"absolute inset-0 z-20\"\r\n        onMouseEnter={() => setHovered(true)}\r\n        onMouseLeave={() => setHovered(false)}\r\n      />\r\n      <div className=\"relative h-[200px] w-[380px] overflow-hidden rounded-t-2xl\">\r\n        {/* Animated Waves */}\r\n        <div className=\"absolute inset-0 z-[6]\">\r\n          <svg\r\n            className=\"absolute bottom-0 left-0 w-full\"\r\n            viewBox=\"0 0 320 160\"\r\n            fill=\"none\"\r\n          >\r\n            <path\r\n              d=\"M0,160 Q95,120 190,140 T380,130 L380,200 L0,200 Z\"\r\n              fill={`${mainColor}40`}\r\n              className={cn(\r\n                \"transition-all duration-1000 ease-in-out\",\r\n                hovered ? \"translate-y-0\" : \"translate-y-8\"\r\n              )}\r\n            />\r\n            <path\r\n              d=\"M0,170 Q95,130 190,150 T380,140 L380,200 L0,200 Z\"\r\n              fill={`${secondaryColor}30`}\r\n              className={cn(\r\n                \"transition-all duration-1000 ease-in-out\",\r\n                hovered ? \"translate-y-0\" : \"translate-y-6\"\r\n              )}\r\n              style={{ transitionDelay: \"200ms\" }}\r\n            />\r\n          </svg>\r\n        </div>\r\n\r\n        {/* Floating Particles */}\r\n        <div className=\"absolute inset-0 z-[7]\">\r\n          {[...Array(6)].map((_, i) => (\r\n            <div\r\n              key={i}\r\n              className={cn(\r\n                \"absolute h-2 w-2 rounded-full opacity-60 transition-all duration-1000 ease-in-out\",\r\n                hovered ? \"animate-bounce\" : \"\"\r\n              )}\r\n              style={{\r\n                backgroundColor: i % 2 === 0 ? mainColor : secondaryColor,\r\n                left: `${15 + i * 50}px`,\r\n                top: `${65 + (i % 3) * 25}px`,\r\n                animationDelay: `${i * 200}ms`,\r\n                transform: hovered ? `translateY(-${(i + 1) * 15}px)` : \"translateY(0)\",\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        {/* Central Icon */}\r\n        <div className=\"ease-[cubic-bezier(0.6, 0.6, 0, 1)] absolute inset-0 z-[8] flex items-center justify-center transition-transform duration-700 group-hover/animated-card:scale-110 group-hover/animated-card:rotate-12\">\r\n          <div className=\"flex h-16 w-16 items-center justify-center rounded-full bg-white/80 backdrop-blur-sm dark:bg-black/80\">\r\n            <span className=\"text-2xl\">🌊</span>\r\n          </div>\r\n        </div>\r\n\r\n        <GridLayer color={gridColor} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// Visual 3: Geometric Morphing Card\r\nconst GeometricVisual: React.FC<VisualProps> = ({\r\n  mainColor = \"#f59e0b\",\r\n  secondaryColor = \"#ef4444\",\r\n  gridColor = \"#80808020\",\r\n}) => {\r\n  const [hovered, setHovered] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"absolute inset-0 z-20\"\r\n        onMouseEnter={() => setHovered(true)}\r\n        onMouseLeave={() => setHovered(false)}\r\n      />\r\n      <div className=\"relative h-[200px] w-[380px] overflow-hidden rounded-t-2xl\">\r\n        {/* Morphing Shapes */}\r\n        <div className=\"absolute inset-0 z-[6] flex items-center justify-center\">\r\n          <div className=\"relative\">\r\n            {/* Main Shape */}\r\n            <div\r\n              className={cn(\r\n                \"transition-all duration-1000 ease-in-out\",\r\n                hovered ? \"rotate-180 scale-150\" : \"rotate-0 scale-100\"\r\n              )}\r\n              style={{ backgroundColor: mainColor }}\r\n            >\r\n              <div className=\"h-20 w-20 rounded-lg opacity-80\" />\r\n            </div>\r\n            \r\n            {/* Orbiting Shapes */}\r\n            {[...Array(4)].map((_, i) => (\r\n              <div\r\n                key={i}\r\n                className={cn(\r\n                  \"absolute h-4 w-4 rounded-full transition-all duration-1000 ease-in-out\",\r\n                  hovered ? \"opacity-100\" : \"opacity-60\"\r\n                )}\r\n                style={{\r\n                  backgroundColor: i % 2 === 0 ? secondaryColor : mainColor,\r\n                  top: \"50%\",\r\n                  left: \"50%\",\r\n                  transform: hovered\r\n                    ? `translate(-50%, -50%) rotate(${i * 90 + 180}deg) translateX(60px) rotate(-${i * 90 + 180}deg)`\r\n                    : `translate(-50%, -50%) rotate(${i * 90}deg) translateX(40px) rotate(-${i * 90}deg)`,\r\n                  transitionDelay: `${i * 100}ms`,\r\n                }}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Background Pattern */}\r\n        <div className=\"absolute inset-0 z-[5]\">\r\n          <svg width=\"320\" height=\"160\" className=\"opacity-20\">\r\n            <defs>\r\n              <pattern id=\"hexagon\" x=\"0\" y=\"0\" width=\"32\" height=\"32\" patternUnits=\"userSpaceOnUse\">\r\n                <polygon points=\"20,2 32,12 32,28 20,38 8,28 8,12\" fill=\"none\" stroke={mainColor} strokeWidth=\"1\"/>\r\n              </pattern>\r\n            </defs>\r\n            <rect width=\"100%\" height=\"100%\" fill=\"url(#hexagon)\" />\r\n          </svg>\r\n        </div>\r\n\r\n        <GridLayer color={gridColor} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// Visual 4: Network Graph Card\r\nconst NetworkVisual: React.FC<VisualProps> = ({\r\n  mainColor = \"#10b981\",\r\n  secondaryColor = \"#3b82f6\",\r\n  gridColor = \"#80808020\",\r\n}) => {\r\n  const [hovered, setHovered] = useState(false)\r\n\r\n  const nodes = [\r\n    { id: 1, x: 160, y: 80, size: 6 },\r\n    { id: 2, x: 100, y: 50, size: 5 },\r\n    { id: 3, x: 220, y: 65, size: 5 },\r\n    { id: 4, x: 80, y: 110, size: 4 },\r\n    { id: 5, x: 240, y: 110, size: 4 },\r\n    { id: 6, x: 160, y: 30, size: 3 },\r\n    { id: 7, x: 160, y: 130, size: 3 },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"absolute inset-0 z-20\"\r\n        onMouseEnter={() => setHovered(true)}\r\n        onMouseLeave={() => setHovered(false)}\r\n      />\r\n      <div className=\"relative h-[200px] w-[380px] overflow-hidden rounded-t-2xl\">\r\n        {/* Network Lines */}\r\n        <svg className=\"absolute inset-0 z-[6] h-full w-full\" viewBox=\"0 0 320 160\">\r\n          {nodes.map((node, i) =>\r\n            nodes.slice(i + 1).map((targetNode, j) => (\r\n              <line\r\n                key={`${i}-${j}`}\r\n                x1={node.x}\r\n                y1={node.y}\r\n                x2={targetNode.x}\r\n                y2={targetNode.y}\r\n                stroke={hovered ? mainColor : secondaryColor}\r\n                strokeWidth={hovered ? 2 : 1}\r\n                opacity={hovered ? 0.8 : 0.4}\r\n                className=\"transition-all duration-500 ease-in-out\"\r\n                style={{ transitionDelay: `${(i + j) * 50}ms` }}\r\n              />\r\n            ))\r\n          )}\r\n        </svg>\r\n\r\n        {/* Network Nodes */}\r\n        <div className=\"absolute inset-0 z-[7]\">\r\n          {nodes.map((node, i) => (\r\n            <div\r\n              key={node.id}\r\n              className={cn(\r\n                \"absolute rounded-full transition-all duration-500 ease-in-out\",\r\n                hovered ? \"animate-pulse\" : \"\"\r\n              )}\r\n              style={{\r\n                left: node.x - node.size / 2,\r\n                top: node.y - node.size / 2,\r\n                width: hovered ? node.size * 1.5 : node.size,\r\n                height: hovered ? node.size * 1.5 : node.size,\r\n                backgroundColor: i === 0 ? mainColor : secondaryColor,\r\n                transitionDelay: `${i * 100}ms`,\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <EllipseGradient color={mainColor} />\r\n        <GridLayer color={gridColor} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// Visual 5: Data Flow Card\r\nconst DataFlowVisual: React.FC<VisualProps> = ({\r\n  mainColor = \"#ec4899\",\r\n  secondaryColor = \"#8b5cf6\",\r\n  gridColor = \"#80808020\",\r\n}) => {\r\n  const [hovered, setHovered] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"absolute inset-0 z-20\"\r\n        onMouseEnter={() => setHovered(true)}\r\n        onMouseLeave={() => setHovered(false)}\r\n      />\r\n      <div className=\"relative h-[160px] w-[320px] overflow-hidden rounded-t-2xl\">\r\n        {/* Flowing Data Streams */}\r\n        <div className=\"absolute inset-0 z-[6]\">\r\n          <svg width=\"320\" height=\"160\" className=\"opacity-80\">\r\n            <defs>\r\n              <linearGradient id=\"flowGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                <stop offset=\"0%\" stopColor={mainColor} />\r\n                <stop offset=\"50%\" stopColor={secondaryColor} />\r\n                <stop offset=\"100%\" stopColor={mainColor} />\r\n              </linearGradient>\r\n            </defs>\r\n            <path\r\n              d=\"M0,80 Q80,40 160,80 T320,80\"\r\n              stroke=\"url(#flowGradient)\"\r\n              strokeWidth={hovered ? 4 : 2}\r\n              fill=\"none\"\r\n              className=\"transition-all duration-1000 ease-in-out\"\r\n              style={{\r\n                strokeDasharray: hovered ? \"20,10\" : \"5,5\",\r\n                animation: hovered ? \"flow 2s linear infinite\" : \"none\"\r\n              }}\r\n            />\r\n            <path\r\n              d=\"M0,100 Q80,60 160,100 T320,100\"\r\n              stroke={secondaryColor}\r\n              strokeWidth={hovered ? 3 : 1.5}\r\n              fill=\"none\"\r\n              opacity={0.6}\r\n              className=\"transition-all duration-1000 ease-in-out\"\r\n              style={{\r\n                strokeDasharray: hovered ? \"15,8\" : \"3,3\",\r\n                animation: hovered ? \"flow 2.5s linear infinite\" : \"none\"\r\n              }}\r\n            />\r\n          </svg>\r\n        </div>\r\n\r\n        {/* Data Points */}\r\n        <div className=\"absolute inset-0 z-[7]\">\r\n          {[...Array(8)].map((_, i) => (\r\n            <div\r\n              key={i}\r\n              className={cn(\r\n                \"absolute h-2 w-2 rounded-full transition-all duration-500 ease-in-out\",\r\n                hovered ? \"animate-ping\" : \"\"\r\n              )}\r\n              style={{\r\n                backgroundColor: i % 2 === 0 ? mainColor : secondaryColor,\r\n                left: `${i * 40}px`,\r\n                top: `${70 + Math.sin(i * 0.5) * 20}px`,\r\n                animationDelay: `${i * 100}ms`,\r\n                transform: hovered ? `scale(1.5) translateY(-${Math.sin(i * 0.5) * 10}px)` : \"scale(1)\",\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        {/* Central Icon */}\r\n        <div className=\"ease-[cubic-bezier(0.6, 0.6, 0, 1)] absolute inset-0 z-[8] flex items-center justify-center transition-transform duration-700 group-hover/animated-card:scale-110 group-hover/animated-card:rotate-6\">\r\n          <div className=\"flex h-12 w-12 items-center justify-center rounded-full bg-white/80 backdrop-blur-sm dark:bg-black/80\">\r\n            <span className=\"text-xl\">📊</span>\r\n          </div>\r\n        </div>\r\n\r\n        <GridLayer color={gridColor} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// Visual 6: Timeline Card\r\nconst TimelineVisual: React.FC<VisualProps> = ({\r\n  mainColor = \"#f59e0b\",\r\n  secondaryColor = \"#ef4444\",\r\n  gridColor = \"#80808020\",\r\n}) => {\r\n  const [hovered, setHovered] = useState(false)\r\n\r\n  const timelinePoints = [\r\n    { x: 40, y: 80, label: \"2020\", size: 4 },\r\n    { x: 80, y: 60, label: \"2021\", size: 5 },\r\n    { x: 120, y: 40, label: \"2022\", size: 6 },\r\n    { x: 160, y: 30, label: \"2023\", size: 7 },\r\n    { x: 200, y: 50, label: \"2024\", size: 6 },\r\n    { x: 240, y: 70, label: \"2025\", size: 5 },\r\n    { x: 280, y: 90, label: \"2026\", size: 4 },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"absolute inset-0 z-20\"\r\n        onMouseEnter={() => setHovered(true)}\r\n        onMouseLeave={() => setHovered(false)}\r\n      />\r\n      <div className=\"relative h-[160px] w-[320px] overflow-hidden rounded-t-2xl\">\r\n        {/* Timeline Line */}\r\n        <svg className=\"absolute inset-0 z-[6] h-full w-full\">\r\n          <path\r\n            d={`M${timelinePoints.map(p => `${p.x},${p.y}`).join(' L')}`}\r\n            stroke={hovered ? mainColor : secondaryColor}\r\n            strokeWidth={hovered ? 3 : 2}\r\n            fill=\"none\"\r\n            className=\"transition-all duration-500 ease-in-out\"\r\n            style={{\r\n              strokeDasharray: hovered ? \"10,5\" : \"5,2\",\r\n              animation: hovered ? \"flow 3s linear infinite\" : \"none\"\r\n            }}\r\n          />\r\n        </svg>\r\n\r\n        {/* Timeline Points */}\r\n        <div className=\"absolute inset-0 z-[7]\">\r\n          {timelinePoints.map((point, i) => (\r\n            <div\r\n              key={i}\r\n              className={cn(\r\n                \"absolute rounded-full transition-all duration-500 ease-in-out\",\r\n                hovered ? \"animate-bounce\" : \"\"\r\n              )}\r\n              style={{\r\n                left: point.x - point.size / 2,\r\n                top: point.y - point.size / 2,\r\n                width: hovered ? point.size * 1.8 : point.size,\r\n                height: hovered ? point.size * 1.8 : point.size,\r\n                backgroundColor: i === 3 ? mainColor : secondaryColor,\r\n                transitionDelay: `${i * 80}ms`,\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        {/* Labels */}\r\n        <div className=\"absolute inset-0 z-[8]\">\r\n          {timelinePoints.map((point, i) => (\r\n            <div\r\n              key={i}\r\n              className={cn(\r\n                \"absolute text-xs font-medium transition-all duration-500 ease-in-out\",\r\n                hovered ? \"opacity-100\" : \"opacity-60\"\r\n              )}\r\n              style={{\r\n                left: point.x - 15,\r\n                top: point.y + 15,\r\n                color: i === 3 ? mainColor : secondaryColor,\r\n                transitionDelay: `${i * 80}ms`,\r\n              }}\r\n            >\r\n              {point.label}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <EllipseGradient color={mainColor} />\r\n        <GridLayer color={gridColor} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// Main Component\r\nexport default function DashboardPage() {\r\n  const cards = [\r\n    {\r\n      visual: <AnalyticsVisual />,\r\n      title: \"Analytics Dashboard\",\r\n      description: \"Interactive data visualization with real-time progress tracking and technology stack overview.\"\r\n    },\r\n    {\r\n      visual: <WaveVisual />,\r\n      title: \"Wave Dynamics\",\r\n      description: \"Fluid wave animations with floating particles that respond to user interaction.\"\r\n    },\r\n    {\r\n      visual: <GeometricVisual />,\r\n      title: \"Geometric Morphing\",\r\n      description: \"Shape transformation animations with rotating elements and geometric patterns.\"\r\n    },\r\n    {\r\n      visual: <NetworkVisual />,\r\n      title: \"Network Graph\",\r\n      description: \"Dynamic network visualization showing connected nodes with interactive animations.\"\r\n    },\r\n    {\r\n      visual: <DataFlowVisual />,\r\n      title: \"Data Flow\",\r\n      description: \"Real-time data streams with flowing analytics and interactive data points visualization.\"\r\n    },\r\n    {\r\n      visual: <TimelineVisual />,\r\n      title: \"Timeline Analysis\",\r\n      description: \"Historical trend analysis with interactive timeline points and predictive insights.\"\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-black to-black text-white\">\r\n      {/* Header Section */}\r\n      <div className=\"max-w-5xl mx-auto px-8 py-16\">\r\n        <div className=\"text-center mb-16\">\r\n          <h1 className=\"text-5xl md:text-7xl font-bold mb-6 bg-gradient-to-r from-primary-400 to-primary-600 bg-clip-text text-transparent\">\r\n            Dashboard Interactivo\r\n          </h1>\r\n          <p className=\"text-xl md:text-2xl text-gray-300 max-w-4xl mx-auto leading-relaxed\">\r\n            Explora los diferentes tipos de dashboard disponibles en QSP Analytics. Cada uno está diseñado para \r\n            proporcionar insights únicos sobre el comercio exterior y la toma de decisiones estratégicas.\r\n          </p>\r\n        </div>\r\n\r\n\r\n\r\n        {/* Interactive Cards Section */}\r\n        <div className=\"max-w-7xl mx-auto px-16\">\r\n          <h2 className=\"text-3xl font-bold mb-12 text-center text-primary-400\">\r\n            Demostración Interactiva\r\n          </h2>\r\n          <p className=\"text-center text-gray-400 mb-20 max-w-3xl mx-auto\">\r\n            Pasa el cursor sobre cada tarjeta para ver las animaciones y entender mejor cómo funcionan \r\n            los diferentes tipos de visualización en nuestros dashboards.\r\n          </p>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-20 gap-y-16 place-items-center justify-items-center mx-auto max-w-7xl\">\r\n            {cards.map((card, index) => (\r\n              <AnimatedCard key={index} className=\"w-[320px] mx-4 my-4\">\r\n                <CardVisual className=\"h-[160px] w-[320px]\">\r\n                  {card.visual}\r\n                </CardVisual>\r\n                <CardBody>\r\n                  <CardTitle>{card.title}</CardTitle>\r\n                  <CardDescription>{card.description}</CardDescription>\r\n                </CardBody>\r\n              </AnimatedCard>\r\n            ))}\r\n          </div>\r\n          \r\n          {/* Spacing after cards */}\r\n          <div className=\"h-20\"></div>\r\n        </div>\r\n\r\n        {/* Call to Action */}\r\n        <div className=\"text-center mt-16\">\r\n          <div className=\"bg-gradient-to-r from-primary-600/20 to-primary-800/20 p-8 rounded-2xl border border-primary-500/30\">\r\n            <h3 className=\"text-2xl font-bold mb-4 text-primary-300\">\r\n              ¿Listo para explorar tu dashboard personalizado?\r\n            </h3>\r\n            <p className=\"text-gray-300 mb-6 max-w-2xl mx-auto\">\r\n              Cada dashboard se adapta a tus necesidades específicas y te proporciona la información \r\n              que necesitas para tomar decisiones informadas en el comercio exterior.\r\n            </p>\r\n            <a \r\n              href=\"/precios\"\r\n              className=\"inline-block px-8 py-4 bg-primary-600 hover:bg-primary-700 text-white font-semibold rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-primary-500/25\"\r\n            >\r\n              Ver planes\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Context Section - Moved below CTA */}\r\n        <div className=\"max-w-5xl mx-auto mt-16 p-8 bg-white/5 backdrop-blur-sm rounded-2xl border border-white/10\">\r\n          <h2 className=\"text-3xl font-bold mb-6 text-primary-400\">Tipos de Dashboard Disponibles</h2>\r\n          \r\n          <div className=\"grid md:grid-cols-2 gap-8\">\r\n            <div>\r\n              <h3 className=\"text-xl font-semibold mb-4 text-primary-300\">📊 Dashboard Analítico</h3>\r\n              <p className=\"text-gray-300 mb-4\">\r\n                Monitoreo en tiempo real de métricas clave de comercio exterior, incluyendo:\r\n              </p>\r\n              <ul className=\"text-gray-400 space-y-2 ml-4\">\r\n                <li>• Volúmenes de exportación por región</li>\r\n                <li>• Tendencias de precios y demanda</li>\r\n                <li>• Análisis de competencia</li>\r\n                <li>• Indicadores de rendimiento</li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div>\r\n              <h3 className=\"text-xl font-semibold mb-4 text-primary-300\">🌊 Dashboard de Tendencias</h3>\r\n              <p className=\"text-gray-300 mb-4\">\r\n                Visualización dinámica de patrones y flujos del mercado:\r\n              </p>\r\n              <ul className=\"text-gray-400 space-y-2 ml-4\">\r\n                <li>• Análisis de ondas de demanda</li>\r\n                <li>• Predicciones estacionales</li>\r\n                <li>• Cambios en preferencias del mercado</li>\r\n                <li>• Alertas de oportunidades</li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div>\r\n              <h3 className=\"text-xl font-semibold mb-4 text-primary-300\">🔷 Dashboard Geométrico</h3>\r\n              <p className=\"text-gray-300 mb-4\">\r\n                Representación estructural de datos complejos:\r\n              </p>\r\n              <ul className=\"text-gray-400 space-y-2 ml-4\">\r\n                <li>• Mapeo de relaciones comerciales</li>\r\n                <li>• Análisis de clusters de mercado</li>\r\n                <li>• Patrones de distribución geográfica</li>\r\n                <li>• Segmentación de clientes</li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div>\r\n              <h3 className=\"text-xl font-semibold mb-4 text-primary-300\">🌐 Dashboard de Redes</h3>\r\n              <p className=\"text-gray-300 mb-4\">\r\n                Análisis de conexiones y flujos comerciales:\r\n              </p>\r\n              <ul className=\"text-gray-400 space-y-2 ml-4\">\r\n                <li>• Mapeo de cadenas de suministro</li>\r\n                <li>• Análisis de socios comerciales</li>\r\n                <li>• Flujos de capital y mercancías</li>\r\n                <li>• Identificación de cuellos de botella</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1816, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}