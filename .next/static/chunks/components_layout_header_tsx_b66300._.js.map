{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/layout/header.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from \"react\"\nimport { ArrowRight, Menu, X, ChevronDown } from \"lucide-react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\n\nconst menuItems = [\n  {\n    label: \"Dashboard\",\n    href: \"/dashboard\",\n    items: []\n  },\n  {\n    label: \"Planes\",\n    href: \"/precios\",\n    items: []\n  },\n  {\n    label: \"Recursos\",\n    href: \"#\",\n    items: [\n      { label: \"Casos de Éxito\", href: \"#\" },\n      { label: \"Estudios de Mercado\", href: \"#\" },\n      { label: \"Guías y Whitepapers\", href: \"#\" },\n      { label: \"Blog\", href: \"/blog\" },\n      { label: \"Webinars & Eventos\", href: \"#\" }\n    ]\n  },\n  {\n    label: \"Newsletter\",\n    href: \"/newsletter\",\n    items: []\n  }\n]\n\nfunction NavItem({ item, isOpen, onToggle, onClose }: { \n  item: typeof menuItems[0]\n  isOpen: boolean\n  onToggle: () => void\n  onClose: () => void\n}) {\n  // Si no hay items, es un enlace simple\n  if (item.items.length === 0) {\n    return (\n      <a\n        href={item.href}\n        className=\"px-4 py-2 text-gray-200 hover:text-white transition-colors\"\n      >\n        {item.label}\n      </a>\n    )\n  }\n\n  // Si hay items, es un menú desplegable\n  return (\n                  <div className=\"relative\">\n                    <button\n        onClick={onToggle}\n        className=\"flex items-center space-x-1 px-4 py-2 text-gray-200 hover:text-white transition-colors\"\n                    >\n                      <span>{item.label}</span>\n        <ChevronDown className={`w-4 h-4 transition-transform ${isOpen ? 'rotate-180' : ''}`} />\n                    </button>\n                    \n                    <AnimatePresence>\n        {isOpen && (\n                        <motion.div\n            initial={{ opacity: 0, y: -10 }}\n                          animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -10 }}\n                          transition={{ duration: 0.2 }}\n            className=\"absolute top-full left-0 w-64 bg-white border border-gray-200 rounded-lg shadow-xl z-50\"\n            onMouseLeave={onClose}\n          >\n            <div className=\"py-2\">\n              {item.items.map((subItem, index) => (\n                <a\n                  key={index}\n                  href={subItem.href}\n                  className=\"block px-4 py-2 text-gray-700 hover:bg-gray-50 hover:text-primary-600 transition-colors\"\n                  onClick={onClose}\n                >\n                  {subItem.label}\n                              </a>\n                            ))}\n                          </div>\n                        </motion.div>\n                      )}\n                    </AnimatePresence>\n                  </div>\n  )\n}\n\nfunction MobileNavItem({ item, isOpen, onToggle }: { \n  item: typeof menuItems[0]\n  isOpen: boolean\n  onToggle: () => void\n}) {\n  return (\n    <div>\n      <button\n        onClick={onToggle}\n        className=\"flex items-center justify-between w-full px-4 py-3 text-left text-gray-200 hover:text-white transition-colors\"\n      >\n        <span>{item.label}</span>\n        <ChevronDown className={`w-4 h-4 transition-transform ${isOpen ? 'rotate-180' : ''}`} />\n      </button>\n      \n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ opacity: 0, height: 0 }}\n            animate={{ opacity: 1, height: \"auto\" }}\n            exit={{ opacity: 0, height: 0 }}\n            transition={{ duration: 0.2 }}\n            className=\"bg-gray-800\"\n          >\n            {item.items.map((subItem, index) => (\n              <a\n                key={index}\n                href={subItem.href}\n                className=\"block px-8 py-2 text-gray-400 hover:text-white transition-colors\"\n              >\n                {subItem.label}\n              </a>\n            ))}\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  )\n}\n\nexport function Header() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false)\n  const [openMenuIndex, setOpenMenuIndex] = useState<number | null>(null)\n\n  const handleMenuToggle = (index: number) => {\n    if (openMenuIndex === index) {\n      setOpenMenuIndex(null)\n    } else {\n      setOpenMenuIndex(index)\n    }\n  }\n\n  const closeAllMenus = () => {\n    setOpenMenuIndex(null)\n  }\n\n  return (\n    <header className=\"relative z-50 bg-[#0A2540] border-b border-blue-900 shadow-lg\">\n      {/* Navigation */}\n      <nav className=\"container mx-auto flex items-center justify-between px-4 py-4\">\n        <div className=\"flex items-center\">\n          {/* Logo */}\n          <a href=\"/\" className=\"flex items-center space-x-3\">\n            <div className=\"flex h-10 w-10 items-center justify-center rounded-full bg-white text-[#0A2540] font-bold text-xl\">\n              Q\n            </div>\n            <span className=\"text-xl font-bold text-white\">QSP Analytics</span>\n          </a>\n          </div>\n\n        {/* Desktop Navigation */}\n        <div className=\"hidden lg:flex items-center space-x-8\">\n          {menuItems.map((item, index) => (\n            <NavItem \n              key={item.label} \n              item={item} \n              isOpen={openMenuIndex === index}\n              onToggle={() => handleMenuToggle(index)}\n              onClose={closeAllMenus}\n            />\n          ))}\n          </div>\n\n        {/* Desktop Actions */}\n        <div className=\"hidden lg:flex items-center space-x-4\">\n          <a\n            href=\"/login\"\n            className=\"text-gray-200 hover:text-white transition-colors\"\n          >\n            Login\n          </a>\n          <a\n            href=\"/solicitar-demo\"\n            className=\"px-6 py-2 bg-white hover:bg-gray-100 text-[#0A2540] font-semibold rounded-lg transition-colors flex items-center space-x-2\"\n          >\n            <span>Solicita una demo</span>\n            <ArrowRight className=\"w-4 h-4\" />\n          </a>\n        </div>\n\n        {/* Mobile menu button */}\n        <button\n          onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n          className=\"lg:hidden p-2 text-gray-200 hover:text-white transition-colors\"\n        >\n          {mobileMenuOpen ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\n        </button>\n      </nav>\n\n      {/* Mobile Navigation */}\n      <AnimatePresence>\n        {mobileMenuOpen && (\n          <motion.div\n            initial={{ opacity: 0, height: 0 }}\n            animate={{ opacity: 1, height: \"auto\" }}\n            exit={{ opacity: 0, height: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"lg:hidden bg-[#0A2540] border-t border-blue-900\"\n          >\n            <div className=\"container mx-auto px-4 py-4\">\n              {menuItems.map((item, index) => (\n                <MobileNavItem \n                  key={item.label} \n                  item={item} \n                  isOpen={openMenuIndex === index}\n                  onToggle={() => handleMenuToggle(index)}\n                />\n              ))}\n              \n              {/* Mobile Actions */}\n              <div className=\"mt-6 pt-6 border-t border-blue-900\">\n                <a\n                  href=\"/login\"\n                  className=\"block px-4 py-3 text-gray-200 hover:text-white transition-colors\"\n                >\n                  Login\n                </a>\n                <a\n                  href=\"/solicitar-demo\"\n                  className=\"w-full mt-3 px-6 py-3 bg-white hover:bg-gray-100 text-[#0A2540] font-semibold rounded-lg transition-colors flex items-center justify-center space-x-2\"\n                >\n                  <span>Solicita una demo</span>\n                  <ArrowRight className=\"w-4 h-4\" />\n                </a>\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </header>\n  )\n}\n\nexport default Header\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}