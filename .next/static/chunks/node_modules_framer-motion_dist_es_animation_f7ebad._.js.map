{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs"],"sourcesContent":["function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n"],"names":[],"mappings":";;;AAAA,SAAS,oBAAoB,CAAC;IAC1B,OAAQ,MAAM,QACV,OAAO,MAAM,YACb,OAAO,EAAE,KAAK,KAAK;AAC3B"}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs"],"sourcesContent":["const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n"],"names":[],"mappings":";;;AAAA,MAAM,oBAAoB,CAAC;IACvB,OAAO,MAAM,OAAO,CAAC;AACzB"}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/utils/transitions.mjs"],"sourcesContent":["/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;AACD,SAAS,oBAAoB,KAAwI;QAAxI,EAAE,IAAI,EAAE,OAAO,MAAM,EAAE,aAAa,EAAE,eAAe,EAAE,gBAAgB,EAAE,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,YAAY,GAAxI;IACzB,OAAO,CAAC,CAAC,OAAO,IAAI,CAAC,YAAY,MAAM;AAC3C;AACA,SAAS,mBAAmB,UAAU,EAAE,GAAG;IACvC,OAAO,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,UAAU,IAAI;AACvD"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs"],"sourcesContent":["/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;AACD,MAAM,uBAAuB;AAC7B,SAAS,sBAAsB,SAAS;IACpC,IAAI,WAAW;IACf,MAAM,WAAW;IACjB,IAAI,QAAQ,UAAU,IAAI,CAAC;IAC3B,MAAO,CAAC,MAAM,IAAI,IAAI,WAAW,qBAAsB;QACnD,YAAY;QACZ,QAAQ,UAAU,IAAI,CAAC;IAC3B;IACA,OAAO,YAAY,uBAAuB,WAAW;AACzD"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs"],"sourcesContent":["import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n"],"names":[],"mappings":";;;;;;AAEA,MAAM,kBAAkB,CAAC;IACrB,MAAM,gBAAgB;YAAC,EAAE,SAAS,EAAE;eAAK,OAAO;IAAS;IACzD,OAAO;QACH,OAAO,IAAM,2KAAM,MAAM,CAAC,eAAe;QACzC,MAAM,IAAM,iLAAY;QACxB;;;SAGC,GACD,KAAK,IAAM,+KAAU,YAAY,GAAG,+KAAU,SAAS,GAAG,YAAY,GAAG;IAC7E;AACJ"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs"],"sourcesContent":["import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n"],"names":[],"mappings":";;;;;;AAEA,MAAM,yBAAyB,GAAG,KAAK;AACvC,SAAS,sBAAsB,YAAY,EAAE,CAAC,EAAE,OAAO;IACnD,MAAM,QAAQ,KAAK,GAAG,CAAC,IAAI,wBAAwB;IACnD,OAAO,uMAAkB,UAAU,aAAa,QAAQ,IAAI;AAChE"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs"],"sourcesContent":["import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAIA,MAAM,UAAU;AAChB,MAAM,cAAc;AACpB,MAAM,cAAc;AACpB,MAAM,aAAa;AACnB,MAAM,aAAa;AACnB,SAAS,WAAW,KAA0D;QAA1D,EAAE,WAAW,GAAG,EAAE,SAAS,IAAI,EAAE,WAAW,CAAC,EAAE,OAAO,CAAC,EAAG,GAA1D;IAChB,IAAI;IACJ,IAAI;IACJ,0KAAQ,YAAY,oMAAsB,cAAc;IACxD,IAAI,eAAe,IAAI;IACvB;;KAEC,GACD,eAAe,uKAAM,YAAY,YAAY;IAC7C,WAAW,uKAAM,aAAa,aAAa,oMAAsB;IACjE,IAAI,eAAe,GAAG;QAClB;;SAEC,GACD,WAAW,CAAC;YACR,MAAM,mBAAmB,eAAe;YACxC,MAAM,QAAQ,mBAAmB;YACjC,MAAM,IAAI,mBAAmB;YAC7B,MAAM,IAAI,gBAAgB,cAAc;YACxC,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC;YACpB,OAAO,UAAU,AAAC,IAAI,IAAK;QAC/B;QACA,aAAa,CAAC;YACV,MAAM,mBAAmB,eAAe;YACxC,MAAM,QAAQ,mBAAmB;YACjC,MAAM,IAAI,QAAQ,WAAW;YAC7B,MAAM,IAAI,KAAK,GAAG,CAAC,cAAc,KAAK,KAAK,GAAG,CAAC,cAAc,KAAK;YAClE,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC;YACpB,MAAM,IAAI,gBAAgB,KAAK,GAAG,CAAC,cAAc,IAAI;YACrD,MAAM,SAAS,CAAC,SAAS,gBAAgB,UAAU,IAAI,CAAC,IAAI;YAC5D,OAAO,AAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAK;QACtC;IACJ,OACK;QACD;;SAEC,GACD,WAAW,CAAC;YACR,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC,eAAe;YACnC,MAAM,IAAI,CAAC,eAAe,QAAQ,IAAI,WAAW;YACjD,OAAO,CAAC,UAAU,IAAI;QAC1B;QACA,aAAa,CAAC;YACV,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC,eAAe;YACnC,MAAM,IAAI,CAAC,WAAW,YAAY,IAAI,CAAC,WAAW,QAAQ;YAC1D,OAAO,IAAI;QACf;IACJ;IACA,MAAM,eAAe,IAAI;IACzB,MAAM,eAAe,gBAAgB,UAAU,YAAY;IAC3D,WAAW,oMAAsB;IACjC,IAAI,MAAM,eAAe;QACrB,OAAO;YACH,WAAW;YACX,SAAS;YACT;QACJ;IACJ,OACK;QACD,MAAM,YAAY,KAAK,GAAG,CAAC,cAAc,KAAK;QAC9C,OAAO;YACH;YACA,SAAS,eAAe,IAAI,KAAK,IAAI,CAAC,OAAO;YAC7C;QACJ;IACJ;AACJ;AACA,MAAM,iBAAiB;AACvB,SAAS,gBAAgB,QAAQ,EAAE,UAAU,EAAE,YAAY;IACvD,IAAI,SAAS;IACb,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,IAAK;QACrC,SAAS,SAAS,SAAS,UAAU,WAAW;IACpD;IACA,OAAO;AACX;AACA,SAAS,gBAAgB,YAAY,EAAE,YAAY;IAC/C,OAAO,eAAe,KAAK,IAAI,CAAC,IAAI,eAAe;AACvD"}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs"],"sourcesContent":["import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/generators/inertia.mjs"],"sourcesContent":["import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n"],"names":[],"mappings":";;;;;;;;AAGA,SAAS,QAAQ,KAA8J;QAA9J,EAAE,SAAS,EAAE,WAAW,GAAG,EAAE,QAAQ,GAAG,EAAE,eAAe,GAAG,EAAE,gBAAgB,EAAE,EAAE,kBAAkB,GAAG,EAAE,YAAY,EAAE,GAAG,EAAE,GAAG,EAAE,YAAY,GAAG,EAAE,SAAS,EAAG,GAA9J;IACb,MAAM,SAAS,SAAS,CAAC,EAAE;IAC3B,MAAM,QAAQ;QACV,MAAM;QACN,OAAO;IACX;IACA,MAAM,gBAAgB,CAAC,IAAM,AAAC,QAAQ,aAAa,IAAI,OAAS,QAAQ,aAAa,IAAI;IACzF,MAAM,kBAAkB,CAAC;QACrB,IAAI,QAAQ,WACR,OAAO;QACX,IAAI,QAAQ,WACR,OAAO;QACX,OAAO,KAAK,GAAG,CAAC,MAAM,KAAK,KAAK,GAAG,CAAC,MAAM,KAAK,MAAM;IACzD;IACA,IAAI,YAAY,QAAQ;IACxB,MAAM,QAAQ,SAAS;IACvB,MAAM,SAAS,iBAAiB,YAAY,QAAQ,aAAa;IACjE;;;KAGC,GACD,IAAI,WAAW,OACX,YAAY,SAAS;IACzB,MAAM,YAAY,CAAC,IAAM,CAAC,YAAY,KAAK,GAAG,CAAC,CAAC,IAAI;IACpD,MAAM,aAAa,CAAC,IAAM,SAAS,UAAU;IAC7C,MAAM,gBAAgB,CAAC;QACnB,MAAM,QAAQ,UAAU;QACxB,MAAM,SAAS,WAAW;QAC1B,MAAM,IAAI,GAAG,KAAK,GAAG,CAAC,UAAU;QAChC,MAAM,KAAK,GAAG,MAAM,IAAI,GAAG,SAAS;IACxC;IACA;;;;;KAKC,GACD,IAAI;IACJ,IAAI;IACJ,MAAM,qBAAqB,CAAC;QACxB,IAAI,CAAC,cAAc,MAAM,KAAK,GAC1B;QACJ,sBAAsB;QACtB,WAAW,oMAAO;YACd,WAAW;gBAAC,MAAM,KAAK;gBAAE,gBAAgB,MAAM,KAAK;aAAE;YACtD,UAAU,qNAAsB,YAAY,GAAG,MAAM,KAAK;YAC1D,SAAS;YACT,WAAW;YACX;YACA;QACJ;IACJ;IACA,mBAAmB;IACnB,OAAO;QACH,oBAAoB;QACpB,MAAM,CAAC;YACH;;;;;aAKC,GACD,IAAI,kBAAkB;YACtB,IAAI,CAAC,YAAY,wBAAwB,WAAW;gBAChD,kBAAkB;gBAClB,cAAc;gBACd,mBAAmB;YACvB;YACA;;;aAGC,GACD,IAAI,wBAAwB,aAAa,IAAI,qBAAqB;gBAC9D,OAAO,SAAS,IAAI,CAAC,IAAI;YAC7B,OACK;gBACD,CAAC,mBAAmB,cAAc;gBAClC,OAAO;YACX;QACJ;IACJ;AACJ"}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs"],"sourcesContent":["import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAOA,SAAS,cAAc,MAAM,EAAE,MAAM;IACjC,OAAO,OAAO,GAAG,CAAC,IAAM,sLAAqB,MAAM,CAAC,GAAG,OAAO,MAAM,GAAG;AAC3E;AACA,SAAS,UAAU,KAAyE;QAAzE,EAAE,WAAW,GAAG,EAAE,WAAW,cAAc,EAAE,KAAK,EAAE,OAAO,WAAW,EAAG,GAAzE;IACf;;;KAGC,GACD,MAAM,kBAAkB,yMAAc,QAChC,KAAK,GAAG,wMACR,oMAA2B;IACjC;;;KAGC,GACD,MAAM,QAAQ;QACV,MAAM;QACN,OAAO,cAAc,CAAC,EAAE;IAC5B;IACA;;KAEC,GACD,MAAM,gBAAgB,gMACtB,8DAA8D;IAC9D,8DAA8D;IAC9D,SAAS,MAAM,MAAM,KAAK,eAAe,MAAM,GACzC,QACA,4LAAc,iBAAiB;IACrC,MAAM,oBAAoB,mLAAY,eAAe,gBAAgB;QACjE,MAAM,MAAM,OAAO,CAAC,mBACd,kBACA,cAAc,gBAAgB;IACxC;IACA,OAAO;QACH,oBAAoB;QACpB,MAAM,CAAC;YACH,MAAM,KAAK,GAAG,kBAAkB;YAChC,MAAM,IAAI,GAAG,KAAK;YAClB,OAAO;QACX;IACJ;AACJ"}},
    {"offset": {"line": 485, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 490, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/animators/js/index.mjs"],"sourcesContent":["import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 788, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 793, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/utils/is-none.mjs"],"sourcesContent":["import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n"],"names":[],"mappings":";;;;;;AAEA,SAAS,OAAO,KAAK;IACjB,IAAI,OAAO,UAAU,UAAU;QAC3B,OAAO,UAAU;IACrB,OACK,IAAI,UAAU,MAAM;QACrB,OAAO,UAAU,UAAU,UAAU,OAAO,2MAAkB;IAClE;AACJ"}},
    {"offset": {"line": 807, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 812, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs"],"sourcesContent":["import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n"],"names":[],"mappings":";;;;;;AAEA;;;;;;;;CAQC,GACD,MAAM,eAAe,CAAC,KAAK;IACvB,0EAA0E;IAC1E,IAAI,QAAQ,UACR,OAAO;IACX,mFAAmF;IACnF,mFAAmF;IACnF,8DAA8D;IAC9D,IAAI,OAAO,UAAU,YAAY,MAAM,OAAO,CAAC,QAC3C,OAAO;IACX,IAAI,OAAO,UAAU,YAAY,sCAAsC;IACnE,CAAC,6LAAQ,IAAI,CAAC,UAAU,UAAU,GAAG,KAAK,wCAAwC;IAClF,CAAC,MAAM,UAAU,CAAC,QAAQ,+BAA+B;MAC3D;QACE,OAAO;IACX;IACA,OAAO;AACX"}},
    {"offset": {"line": 842, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 847, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs"],"sourcesContent":["import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n"],"names":[],"mappings":";;;;;;;;;;AAIA,SAAS,aAAa,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU;IACtD,MAAM,qBAAqB,sMAAa,WAAW;IACnD,IAAI;IACJ,IAAI,MAAM,OAAO,CAAC,SAAS;QACvB,YAAY;eAAI;SAAO;IAC3B,OACK;QACD,YAAY;YAAC;YAAM;SAAO;IAC9B;IACA,MAAM,gBAAgB,WAAW,IAAI,KAAK,YAAY,WAAW,IAAI,GAAG,MAAM,GAAG;IACjF,IAAI,0BAA0B;IAC9B,MAAM,sBAAsB,EAAE;IAC9B,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAK;QACvC;;SAEC,GACD,IAAI,SAAS,CAAC,EAAE,KAAK,MAAM;YACvB,SAAS,CAAC,EAAE,GAAG,MAAM,IAAI,gBAAgB,SAAS,CAAC,IAAI,EAAE;QAC7D;QACA,IAAI,0LAAO,SAAS,CAAC,EAAE,GAAG;YACtB,oBAAoB,IAAI,CAAC;QAC7B;QACA,iDAAiD;QACjD,IAAI,OAAO,SAAS,CAAC,EAAE,KAAK,YACxB,SAAS,CAAC,EAAE,KAAK,UACjB,SAAS,CAAC,EAAE,KAAK,KAAK;YACtB,0BAA0B,SAAS,CAAC,EAAE;QAC1C;IACJ;IACA,IAAI,sBACA,oBAAoB,MAAM,IAC1B,yBAAyB;QACzB,IAAK,IAAI,IAAI,GAAG,IAAI,oBAAoB,MAAM,EAAE,IAAK;YACjD,MAAM,QAAQ,mBAAmB,CAAC,EAAE;YACpC,SAAS,CAAC,MAAM,GAAG,0NAAkB,WAAW;QACpD;IACJ;IACA,OAAO;AACX"}},
    {"offset": {"line": 896, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 901, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs"],"sourcesContent":["import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n"],"names":[],"mappings":";;;;;;AAEA,MAAM,oBAAoB;IACtB,MAAM;IACN,WAAW;IACX,SAAS;IACT,WAAW;AACf;AACA,MAAM,yBAAyB,CAAC,SAAW,CAAC;QACxC,MAAM;QACN,WAAW;QACX,SAAS,WAAW,IAAI,IAAI,KAAK,IAAI,CAAC,OAAO;QAC7C,WAAW;IACf,CAAC;AACD,MAAM,sBAAsB;IACxB,MAAM;IACN,UAAU;AACd;AACA;;;CAGC,GACD,MAAM,OAAO;IACT,MAAM;IACN,MAAM;QAAC;QAAM;QAAK;QAAM;KAAE;IAC1B,UAAU;AACd;AACA,MAAM,uBAAuB,CAAC;QAAU,EAAE,SAAS,EAAE;IACjD,IAAI,UAAU,MAAM,GAAG,GAAG;QACtB,OAAO;IACX,OACK,IAAI,sMAAe,GAAG,CAAC,WAAW;QACnC,OAAO,SAAS,UAAU,CAAC,WACrB,uBAAuB,SAAS,CAAC,EAAE,IACnC;IACV;IACA,OAAO;AACX"}},
    {"offset": {"line": 946, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 951, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/animators/instant.mjs"],"sourcesContent":["import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n"],"names":[],"mappings":";;;;;;;;AAGA,SAAS,uBAAuB,KAA2C;QAA3C,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAG,GAA3C;IAC5B,MAAM,WAAW;QACb,YAAY,SAAS,SAAS,CAAC,UAAU,MAAM,GAAG,EAAE;QACpD,cAAc;QACd;;;;;;SAMC,GACD,OAAO;YACH,MAAM;YACN,OAAO;YACP,UAAU;YACV,IAAI;YACJ,KAAK;YACL,IAAI;YACJ,MAAM,CAAC;gBACH;gBACA,OAAO,QAAQ,OAAO;YAC1B;YACA,MAAM;YACN,QAAQ;QACZ;IACJ;IACA,OAAO,QACD,qMAAa;QACX,WAAW;YAAC;YAAG;SAAE;QACjB,UAAU;QACV;QACA,YAAY;IAChB,KACE;AACV"}},
    {"offset": {"line": 996, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1001, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs"],"sourcesContent":["function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n"],"names":[],"mappings":";;;AAAA,SAAS,iBAAiB,SAAS,EAAE,KAA+B;QAA/B,EAAE,MAAM,EAAE,aAAa,MAAM,EAAE,GAA/B;IACjC,MAAM,QAAQ,UAAU,eAAe,UAAU,SAAS,MAAM,IAC1D,IACA,UAAU,MAAM,GAAG;IACzB,OAAO,SAAS,CAAC,MAAM;AAC3B"}},
    {"offset": {"line": 1010, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1015, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs"],"sourcesContent":["import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n"],"names":[],"mappings":";;;;;;;;;AAEA,SAAS,uBAAuB,MAAM;IAClC,OAAO,QAAQ,CAAC,UACX,OAAO,WAAW,YAAY,oBAAoB,CAAC,OAAO,IAC3D,mNAAmB,WAClB,MAAM,OAAO,CAAC,WAAW,OAAO,KAAK,CAAC;AAC/C;AACA,MAAM,sBAAsB;QAAC,CAAC,GAAG,GAAG,GAAG,EAAE;WAAK,CAAC,aAAa,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAAD;AACnF,MAAM,uBAAuB;IACzB,QAAQ;IACR,MAAM;IACN,QAAQ;IACR,SAAS;IACT,WAAW;IACX,QAAQ,oBAAoB;QAAC;QAAG;QAAM;QAAM;KAAE;IAC9C,SAAS,oBAAoB;QAAC;QAAM;QAAG;QAAG;KAAK;IAC/C,QAAQ,oBAAoB;QAAC;QAAM;QAAM;QAAM,CAAC;KAAK;IACrD,SAAS,oBAAoB;QAAC;QAAM;QAAM;QAAM;KAAK;AACzD;AACA,SAAS,wBAAwB,MAAM;IACnC,IAAI,CAAC,QACD,OAAO;IACX,OAAO,mNAAmB,UACpB,oBAAoB,UACpB,MAAM,OAAO,CAAC,UACV,OAAO,GAAG,CAAC,2BACX,oBAAoB,CAAC,OAAO;AAC1C"}},
    {"offset": {"line": 1067, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1072, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs"],"sourcesContent":["import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n"],"names":[],"mappings":";;;;;;AAEA,SAAS,aAAa,OAAO,EAAE,SAAS,EAAE,SAAS;QAAE,EAAE,QAAQ,CAAC,EAAE,QAAQ,EAAE,SAAS,CAAC,EAAE,aAAa,MAAM,EAAE,IAAI,EAAE,KAAK,EAAG,GAAtE,iEAAyE,CAAC;IAC3H,MAAM,kBAAkB;QAAE,CAAC,UAAU,EAAE;IAAU;IACjD,IAAI,OACA,gBAAgB,MAAM,GAAG;IAC7B,MAAM,SAAS,oNAAwB;IACvC;;KAEC,GACD,IAAI,MAAM,OAAO,CAAC,SACd,gBAAgB,MAAM,GAAG;IAC7B,OAAO,QAAQ,OAAO,CAAC,iBAAiB;QACpC;QACA;QACA,QAAQ,CAAC,MAAM,OAAO,CAAC,UAAU,SAAS;QAC1C,MAAM;QACN,YAAY,SAAS;QACrB,WAAW,eAAe,YAAY,cAAc;IACxD;AACJ"}},
    {"offset": {"line": 1098, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1103, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs"],"sourcesContent":["import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1299, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs"],"sourcesContent":["import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,MAAM,qBAAqB,SAAC,WAAW,OAAO;QAAQ,8EAAa,CAAC;IAChE,OAAO,CAAC;QACJ,MAAM,kBAAkB,uMAAmB,YAAY,cAAc,CAAC;QACtE;;;;SAIC,GACD,MAAM,QAAQ,gBAAgB,KAAK,IAAI,WAAW,KAAK,IAAI;QAC3D;;;SAGC,GACD,IAAI,EAAE,UAAU,CAAC,EAAE,GAAG;QACtB,UAAU,UAAU,oMAAsB;QAC1C,MAAM,YAAY,+LAAa,OAAO,WAAW,QAAQ;QACzD;;;;SAIC,GACD,MAAM,iBAAiB,SAAS,CAAC,EAAE;QACnC,MAAM,iBAAiB,SAAS,CAAC,UAAU,MAAM,GAAG,EAAE;QACtD,MAAM,qBAAqB,sMAAa,WAAW;QACnD,MAAM,qBAAqB,sMAAa,WAAW;QACnD,0KAAQ,uBAAuB,oBAAoB,CAAC,0BAA0B,EAAE,UAAU,OAAO,EAAE,eAAe,MAAM,EAAE,eAAe,GAAG,EAAE,eAAe,2DAA2D,EAAE,eAAe,0BAA0B,EAAE,eAAe,4BAA4B,CAAC;QACjT,IAAI,UAAU;YACV;YACA,UAAU,MAAM,WAAW;YAC3B,MAAM;YACN,GAAG,eAAe;YAClB,OAAO,CAAC;YACR,UAAU,CAAC;gBACP,MAAM,GAAG,CAAC;gBACV,gBAAgB,QAAQ,IAAI,gBAAgB,QAAQ,CAAC;YACzD;YACA,YAAY;gBACR;gBACA,gBAAgB,UAAU,IAAI,gBAAgB,UAAU;YAC5D;QACJ;QACA;;;SAGC,GACD,IAAI,CAAC,wMAAoB,kBAAkB;YACvC,UAAU;gBACN,GAAG,OAAO;gBACV,GAAG,oNAAqB,WAAW,QAAQ;YAC/C;QACJ;QACA;;;;SAIC,GACD,IAAI,QAAQ,QAAQ,EAAE;YAClB,QAAQ,QAAQ,GAAG,oMAAsB,QAAQ,QAAQ;QAC7D;QACA,IAAI,QAAQ,WAAW,EAAE;YACrB,QAAQ,WAAW,GAAG,oMAAsB,QAAQ,WAAW;QACnE;QACA,IAAI,CAAC,sBACD,CAAC,sBACD,uNAAsB,OAAO,IAC7B,gBAAgB,IAAI,KAAK,SACzB,2LAAmB,cAAc,EAAE;YACnC;;;aAGC,GACD,OAAO,2MAAuB,uNAAsB,OAAO,GACrD;gBAAE,GAAG,OAAO;gBAAE,OAAO;YAAE,IACvB;QACV;QACA;;SAEC,GACD,IACA;;;;SAIC,GACD,CAAC,WAAW,SAAS,IACjB,MAAM,KAAK,IACX,MAAM,KAAK,CAAC,OAAO,YAAY,eAC/B;;;aAGC,GACD,CAAC,MAAM,KAAK,CAAC,QAAQ,GAAG,QAAQ,EAAE;YAClC,MAAM,uBAAuB,mPAA2B,OAAO,WAAW;YAC1E,IAAI,sBACA,OAAO;QACf;QACA;;SAEC,GACD,OAAO,qMAAa;IACxB;AACJ"}},
    {"offset": {"line": 1411, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1416, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs"],"sourcesContent":["import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n"],"names":[],"mappings":";;;;;;;AAEA,MAAM,wBAAwB;AAC9B,MAAM,+BAA+B,UAAU,4MAAY"}},
    {"offset": {"line": 1426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1431, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs"],"sourcesContent":["import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAQA;;;;;CAKC,GACD,SAAS,qBAAqB,KAAiC,EAAE,GAAG;QAAtC,EAAE,aAAa,EAAE,cAAc,EAAE,GAAjC;IAC1B,MAAM,cAAc,cAAc,cAAc,CAAC,QAAQ,cAAc,CAAC,IAAI,KAAK;IACjF,cAAc,CAAC,IAAI,GAAG;IACtB,OAAO;AACX;AACA,SAAS,oBAAoB,KAAK,EAAE,MAAM;IACtC,MAAM,UAAU,MAAM,GAAG;IACzB,IAAI,MAAM,OAAO,CAAC,SAAS;QACvB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;YACpC,IAAI,MAAM,CAAC,EAAE,KAAK,SACd,OAAO;QACf;IACJ,OACK;QACD,OAAO,YAAY;IACvB;AACJ;AACA,SAAS,cAAc,aAAa,EAAE,UAAU;QAAE,EAAE,QAAQ,CAAC,EAAE,kBAAkB,EAAE,IAAI,EAAE,GAAvC,iEAA0C,CAAC;IACzF,IAAI,EAAE,aAAa,cAAc,oBAAoB,EAAE,EAAE,aAAa,EAAE,GAAG,QAAQ,GAAG,cAAc,oBAAoB,CAAC;IACzH,MAAM,aAAa,cAAc,QAAQ,CAAC;IAC1C,IAAI,oBACA,aAAa;IACjB,MAAM,aAAa,EAAE;IACrB,MAAM,qBAAqB,QACvB,cAAc,cAAc,IAC5B,cAAc,cAAc,CAAC,QAAQ,EAAE,CAAC,KAAK;IACjD,IAAK,MAAM,OAAO,OAAQ;QACtB,MAAM,QAAQ,cAAc,QAAQ,CAAC;QACrC,MAAM,cAAc,MAAM,CAAC,IAAI;QAC/B,IAAI,CAAC,SACD,gBAAgB,aACf,sBACG,qBAAqB,oBAAoB,MAAO;YACpD;QACJ;QACA,MAAM,kBAAkB;YACpB;YACA,SAAS;YACT,GAAG,uMAAmB,cAAc,CAAC,GAAG,IAAI;QAChD;QACA;;;SAGC,GACD,IAAI,OAAO,uBAAuB,EAAE;YAChC,MAAM,WAAW,cAAc,QAAQ,EAAE,+NAA8B;YACvE,IAAI,UAAU;gBACV,MAAM,UAAU,OAAO,uBAAuB,CAAC,UAAU,KAAK;gBAC9D,IAAI,YAAY,MAAM;oBAClB,gBAAgB,OAAO,GAAG;oBAC1B,gBAAgB,SAAS,GAAG;gBAChC;YACJ;QACJ;QACA,IAAI,UAAU,CAAC,gBAAgB,SAAS,IACpC,CAAC,oBAAoB,OAAO;QAChC,IAAI,gBAAgB,IAAI,KAAK,YACzB,CAAC,MAAM,WAAW,MAAM,gBAAgB,QAAQ,GAAG;YACnD,UAAU;QACd;QACA;;;;SAIC,GACD,IAAI,MAAM,SAAS,EAAE;YACjB,UAAU;QACd;QACA,IAAI,SACA;QACJ,MAAM,KAAK,CAAC,gNAAmB,KAAK,OAAO,aAAa,cAAc,kBAAkB,IAAI,sMAAe,GAAG,CAAC,OACzG;YAAE,MAAM;QAAM,IACd;QACN,MAAM,YAAY,MAAM,SAAS;QACjC,IAAI,+MAAwB,aAAa;YACrC,WAAW,GAAG,CAAC;YACf,UAAU,IAAI,CAAC,IAAM,WAAW,MAAM,CAAC;QAC3C;QACA,WAAW,IAAI,CAAC;IACpB;IACA,IAAI,eAAe;QACf,QAAQ,GAAG,CAAC,YAAY,IAAI,CAAC;YACzB,iBAAiB,uLAAU,eAAe;QAC9C;IACJ;IACA,OAAO;AACX"}},
    {"offset": {"line": 1531, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1536, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs"],"sourcesContent":["import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n"],"names":[],"mappings":";;;;;;;;;AAGA,SAAS,eAAe,aAAa,EAAE,OAAO;QAAE,UAAA,iEAAU,CAAC;IACvD,MAAM,WAAW,mNAAe,eAAe,SAAS,QAAQ,MAAM;IACtE,IAAI,EAAE,aAAa,cAAc,oBAAoB,MAAM,CAAC,CAAC,EAAE,GAAG,YAAY,CAAC;IAC/E,IAAI,QAAQ,kBAAkB,EAAE;QAC5B,aAAa,QAAQ,kBAAkB;IAC3C;IACA;;;KAGC,GACD,MAAM,eAAe,WACf,IAAM,QAAQ,GAAG,CAAC,uNAAc,eAAe,UAAU,YACzD,IAAM,QAAQ,OAAO;IAC3B;;;KAGC,GACD,MAAM,qBAAqB,cAAc,eAAe,IAAI,cAAc,eAAe,CAAC,IAAI,GACxF;YAAC,gFAAe;QACd,MAAM,EAAE,gBAAgB,CAAC,EAAE,eAAe,EAAE,gBAAgB,EAAG,GAAG;QAClE,OAAO,gBAAgB,eAAe,SAAS,gBAAgB,cAAc,iBAAiB,kBAAkB;IACpH,IACE,IAAM,QAAQ,OAAO;IAC3B;;;KAGC,GACD,MAAM,EAAE,IAAI,EAAE,GAAG;IACjB,IAAI,MAAM;QACN,MAAM,CAAC,OAAO,KAAK,GAAG,SAAS,mBACzB;YAAC;YAAc;SAAmB,GAClC;YAAC;YAAoB;SAAa;QACxC,OAAO,QAAQ,IAAI,CAAC,IAAM;IAC9B,OACK;QACD,OAAO,QAAQ,GAAG,CAAC;YAAC;YAAgB,mBAAmB,QAAQ,KAAK;SAAE;IAC1E;AACJ;AACA,SAAS,gBAAgB,aAAa,EAAE,OAAO;QAAE,gBAAA,iEAAgB,GAAG,kBAAA,iEAAkB,GAAG,mBAAA,iEAAmB,GAAG;IAC3G,MAAM,aAAa,EAAE;IACrB,MAAM,qBAAqB,CAAC,cAAc,eAAe,CAAC,IAAI,GAAG,CAAC,IAAI;IACtE,MAAM,0BAA0B,qBAAqB,IAC/C;YAAC,qEAAI;eAAM,IAAI;IAAc,IAC7B;YAAC,qEAAI;eAAM,qBAAqB,IAAI;IAAc;IACxD,MAAM,IAAI,CAAC,cAAc,eAAe,EACnC,IAAI,CAAC,iBACL,OAAO,CAAC,CAAC,OAAO;QACjB,MAAM,MAAM,CAAC,kBAAkB;QAC/B,WAAW,IAAI,CAAC,eAAe,OAAO,SAAS;YAC3C,GAAG,OAAO;YACV,OAAO,gBAAgB,wBAAwB;QACnD,GAAG,IAAI,CAAC,IAAM,MAAM,MAAM,CAAC,qBAAqB;IACpD;IACA,OAAO,QAAQ,GAAG,CAAC;AACvB;AACA,SAAS,gBAAgB,CAAC,EAAE,CAAC;IACzB,OAAO,EAAE,gBAAgB,CAAC;AAC9B"}},
    {"offset": {"line": 1608, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1613, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs"],"sourcesContent":["import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n"],"names":[],"mappings":";;;;;;;;;;AAIA,SAAS,qBAAqB,aAAa,EAAE,UAAU;QAAE,UAAA,iEAAU,CAAC;IAChE,cAAc,MAAM,CAAC,kBAAkB;IACvC,IAAI;IACJ,IAAI,MAAM,OAAO,CAAC,aAAa;QAC3B,MAAM,aAAa,WAAW,GAAG,CAAC,CAAC,UAAY,yNAAe,eAAe,SAAS;QACtF,YAAY,QAAQ,GAAG,CAAC;IAC5B,OACK,IAAI,OAAO,eAAe,UAAU;QACrC,YAAY,yNAAe,eAAe,YAAY;IAC1D,OACK;QACD,MAAM,qBAAqB,OAAO,eAAe,aAC3C,mNAAe,eAAe,YAAY,QAAQ,MAAM,IACxD;QACN,YAAY,QAAQ,GAAG,CAAC,uNAAc,eAAe,oBAAoB;IAC7E;IACA,OAAO,UAAU,IAAI,CAAC,IAAM,cAAc,MAAM,CAAC,qBAAqB;AAC1E"}},
    {"offset": {"line": 1639, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1644, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/utils/stagger.mjs"],"sourcesContent":["import { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\n\nfunction getOriginIndex(from, total) {\n    if (from === \"first\") {\n        return 0;\n    }\n    else {\n        const lastIndex = total - 1;\n        return from === \"last\" ? lastIndex : lastIndex / 2;\n    }\n}\nfunction stagger(duration = 0.1, { startDelay = 0, from = 0, ease } = {}) {\n    return (i, total) => {\n        const fromIndex = typeof from === \"number\" ? from : getOriginIndex(from, total);\n        const distance = Math.abs(fromIndex - i);\n        let delay = duration * distance;\n        if (ease) {\n            const maxDelay = total * duration;\n            const easingFunction = easingDefinitionToFunction(ease);\n            delay = easingFunction(delay / maxDelay) * maxDelay;\n        }\n        return startDelay + delay;\n    };\n}\n\nexport { getOriginIndex, stagger };\n"],"names":[],"mappings":";;;;;;;AAEA,SAAS,eAAe,IAAI,EAAE,KAAK;IAC/B,IAAI,SAAS,SAAS;QAClB,OAAO;IACX,OACK;QACD,MAAM,YAAY,QAAQ;QAC1B,OAAO,SAAS,SAAS,YAAY,YAAY;IACrD;AACJ;AACA,SAAS;QAAQ,WAAA,iEAAW,KAAK,EAAE,aAAa,CAAC,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE,GAAlC,iEAAqC,CAAC;IACnE,OAAO,CAAC,GAAG;QACP,MAAM,YAAY,OAAO,SAAS,WAAW,OAAO,eAAe,MAAM;QACzE,MAAM,WAAW,KAAK,GAAG,CAAC,YAAY;QACtC,IAAI,QAAQ,WAAW;QACvB,IAAI,MAAM;YACN,MAAM,WAAW,QAAQ;YACzB,MAAM,iBAAiB,oMAA2B;YAClD,QAAQ,eAAe,QAAQ,YAAY;QAC/C;QACA,OAAO,aAAa;IACxB;AACJ"}},
    {"offset": {"line": 1674, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1679, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/sequence/utils/sort.mjs"],"sourcesContent":["function compareByTime(a, b) {\n    if (a.at === b.at) {\n        if (a.value === null)\n            return 1;\n        if (b.value === null)\n            return -1;\n        return 0;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nexport { compareByTime };\n"],"names":[],"mappings":";;;AAAA,SAAS,cAAc,CAAC,EAAE,CAAC;IACvB,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;QACf,IAAI,EAAE,KAAK,KAAK,MACZ,OAAO;QACX,IAAI,EAAE,KAAK,KAAK,MACZ,OAAO,CAAC;QACZ,OAAO;IACX,OACK;QACD,OAAO,EAAE,EAAE,GAAG,EAAE,EAAE;IACtB;AACJ"}},
    {"offset": {"line": 1692, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1697, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/sequence/utils/edit.mjs"],"sourcesContent":["import { getEasingForSegment } from '../../../easing/utils/get-easing-for-segment.mjs';\nimport { removeItem } from '../../../utils/array.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mix(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n"],"names":[],"mappings":";;;;;;;;;;;AAIA,SAAS,eAAe,QAAQ,EAAE,SAAS,EAAE,OAAO;IAChD,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,IAAK;QACtC,MAAM,WAAW,QAAQ,CAAC,EAAE;QAC5B,IAAI,SAAS,EAAE,GAAG,aAAa,SAAS,EAAE,GAAG,SAAS;YAClD,4KAAW,UAAU;YACrB,8DAA8D;YAC9D;QACJ;IACJ;AACJ;AACA,SAAS,aAAa,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO;IACzE;;;;KAIC,GACD,eAAe,UAAU,WAAW;IACpC,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAK;QACvC,SAAS,IAAI,CAAC;YACV,OAAO,SAAS,CAAC,EAAE;YACnB,IAAI,mKAAI,WAAW,SAAS,MAAM,CAAC,EAAE;YACrC,QAAQ,yNAAoB,QAAQ;QACxC;IACJ;AACJ"}},
    {"offset": {"line": 1733, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1738, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/sequence/utils/calc-time.mjs"],"sourcesContent":["/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (typeof next === \"number\") {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nexport { calcNextTime };\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACD,SAAS,aAAa,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM;IAC7C,IAAI;IACJ,IAAI,OAAO,SAAS,UAAU;QAC1B,OAAO;IACX,OACK,IAAI,KAAK,UAAU,CAAC,QAAQ,KAAK,UAAU,CAAC,MAAM;QACnD,OAAO,KAAK,GAAG,CAAC,GAAG,UAAU,WAAW;IAC5C,OACK,IAAI,SAAS,KAAK;QACnB,OAAO;IACX,OACK;QACD,OAAO,CAAC,KAAK,OAAO,GAAG,CAAC,KAAK,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK;IACpE;AACJ"}},
    {"offset": {"line": 1757, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1762, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/sequence/create.mjs"],"sourcesContent":["import { createGeneratorEasing } from '../../easing/utils/create-generator-easing.mjs';\nimport { resolveElements } from '../../render/dom/utils/resolve-element.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { fillOffset } from '../../utils/offsets/fill.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { calcNextTime } from './utils/calc-time.mjs';\nimport { addKeyframes } from './utils/edit.mjs';\nimport { compareByTime } from './utils/sort.mjs';\n\nconst defaultSegmentEasing = \"easeInOut\";\nfunction createAnimationsFromSequence(sequence, { defaultTransition = {}, ...sequenceTransition } = {}, scope) {\n    const defaultDuration = defaultTransition.duration || 0.3;\n    const animationDefinitions = new Map();\n    const sequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the sequence array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < sequence.length; i++) {\n        const segment = sequence[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (typeof segment === \"string\") {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        let [subject, keyframes, transition = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (transition.at !== undefined) {\n            currentTime = calcNextTime(currentTime, transition.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numElements = 0) => {\n            const valueKeyframesAsList = keyframesAsList(valueKeyframes);\n            const { delay = 0, times = defaultOffset(valueKeyframesAsList), type = \"keyframes\", ...remainingTransition } = valueTransition;\n            let { ease = defaultTransition.ease || \"easeOut\", duration } = valueTransition;\n            /**\n             * Resolve stagger() if defined.\n             */\n            const calculatedDelay = typeof delay === \"function\"\n                ? delay(elementIndex, numElements)\n                : delay;\n            /**\n             * If this animation should and can use a spring, generate a spring easing function.\n             */\n            const numKeyframes = valueKeyframesAsList.length;\n            if (numKeyframes <= 2 && type === \"spring\") {\n                /**\n                 * As we're creating an easing function from a spring,\n                 * ideally we want to generate it using the real distance\n                 * between the two keyframes. However this isn't always\n                 * possible - in these situations we use 0-100.\n                 */\n                let absoluteDelta = 100;\n                if (numKeyframes === 2 &&\n                    isNumberKeyframesArray(valueKeyframesAsList)) {\n                    const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];\n                    absoluteDelta = Math.abs(delta);\n                }\n                const springTransition = { ...remainingTransition };\n                if (duration !== undefined) {\n                    springTransition.duration = secondsToMilliseconds(duration);\n                }\n                const springEasing = createGeneratorEasing(springTransition, absoluteDelta);\n                ease = springEasing.ease;\n                duration = springEasing.duration;\n            }\n            duration !== null && duration !== void 0 ? duration : (duration = defaultDuration);\n            const startTime = currentTime + calculatedDelay;\n            const targetTime = startTime + duration;\n            /**\n             * If there's only one time offset of 0, fill in a second with length 1\n             */\n            if (times.length === 1 && times[0] === 0) {\n                times[1] = 1;\n            }\n            /**\n             * Fill out if offset if fewer offsets than keyframes\n             */\n            const remainder = times.length - valueKeyframesAsList.length;\n            remainder > 0 && fillOffset(times, remainder);\n            /**\n             * If only one value has been set, ie [1], push a null to the start of\n             * the keyframe array. This will let us mark a keyframe at this point\n             * that will later be hydrated with the previous value.\n             */\n            valueKeyframesAsList.length === 1 &&\n                valueKeyframesAsList.unshift(null);\n            /**\n             * Add keyframes, mapping offsets to absolute time.\n             */\n            addKeyframes(valueSequence, valueKeyframesAsList, ease, times, startTime, targetTime);\n            maxDuration = Math.max(calculatedDelay + duration, maxDuration);\n            totalDuration = Math.max(targetTime, totalDuration);\n        };\n        if (isMotionValue(subject)) {\n            const subjectSequence = getSubjectSequence(subject, sequences);\n            resolveValueSequence(keyframes, transition, getValueSequence(\"default\", subjectSequence));\n        }\n        else {\n            /**\n             * Find all the elements specified in the definition and parse value\n             * keyframes from their timeline definitions.\n             */\n            const elements = resolveElements(subject, scope, elementCache);\n            const numElements = elements.length;\n            /**\n             * For every element in this segment, process the defined values.\n             */\n            for (let elementIndex = 0; elementIndex < numElements; elementIndex++) {\n                /**\n                 * Cast necessary, but we know these are of this type\n                 */\n                keyframes = keyframes;\n                transition = transition;\n                const element = elements[elementIndex];\n                const subjectSequence = getSubjectSequence(element, sequences);\n                for (const key in keyframes) {\n                    resolveValueSequence(keyframes[key], getValueTransition(transition, key), getValueSequence(key, subjectSequence), elementIndex, numElements);\n                }\n            }\n        }\n        prevTime = currentTime;\n        currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    sequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || \"easeOut\");\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(defaultSegmentEasing);\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            if (!animationDefinitions.has(element)) {\n                animationDefinitions.set(element, {\n                    keyframes: {},\n                    transition: {},\n                });\n            }\n            const definition = animationDefinitions.get(element);\n            definition.keyframes[key] = keyframes;\n            definition.transition[key] = {\n                ...defaultTransition,\n                duration: totalDuration,\n                ease: valueEasing,\n                times: valueOffset,\n                ...sequenceTransition,\n            };\n        }\n    });\n    return animationDefinitions;\n}\nfunction getSubjectSequence(subject, sequences) {\n    !sequences.has(subject) && sequences.set(subject, {});\n    return sequences.get(subject);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\nfunction keyframesAsList(keyframes) {\n    return Array.isArray(keyframes) ? keyframes : [keyframes];\n}\nfunction getValueTransition(transition, key) {\n    return transition[key]\n        ? { ...transition, ...transition[key] }\n        : { ...transition };\n}\nconst isNumber = (keyframe) => typeof keyframe === \"number\";\nconst isNumberKeyframesArray = (keyframes) => keyframes.every(isNumber);\n\nexport { createAnimationsFromSequence, getValueTransition };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1985, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1990, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs"],"sourcesContent":["import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n"],"names":[],"mappings":";;;;;;;;;;AAIA,SAAS,mBAAmB,KAAK,EAAE,SAAS,EAAE,OAAO;IACjD,MAAM,gBAAgB,wMAAc,SAAS,QAAQ,6KAAY;IACjE,cAAc,KAAK,CAAC,gNAAmB,IAAI,eAAe,WAAW;IACrE,OAAO,cAAc,SAAS;AAClC"}},
    {"offset": {"line": 2006, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2011, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/utils/create-visual-element.mjs"],"sourcesContent":["import { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { SVGVisualElement } from '../../render/svg/SVGVisualElement.mjs';\nimport { HTMLVisualElement } from '../../render/html/HTMLVisualElement.mjs';\nimport { visualElementStore } from '../../render/store.mjs';\n\nfunction createVisualElement(element) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                transform: {},\n                transformOrigin: {},\n                style: {},\n                vars: {},\n                attrs: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = isSVGElement(element)\n        ? new SVGVisualElement(options, {\n            enableHardwareAcceleration: false,\n        })\n        : new HTMLVisualElement(options, {\n            enableHardwareAcceleration: true,\n        });\n    node.mount(element);\n    visualElementStore.set(element, node);\n}\n\nexport { createVisualElement };\n"],"names":[],"mappings":";;;;;;;;;;;;AAKA,SAAS,oBAAoB,OAAO;IAChC,MAAM,UAAU;QACZ,iBAAiB;QACjB,OAAO,CAAC;QACR,aAAa;YACT,aAAa;gBACT,WAAW,CAAC;gBACZ,iBAAiB,CAAC;gBAClB,OAAO,CAAC;gBACR,MAAM,CAAC;gBACP,OAAO,CAAC;YACZ;YACA,cAAc,CAAC;QACnB;IACJ;IACA,MAAM,OAAO,8MAAa,WACpB,yMAAqB,SAAS;QAC5B,4BAA4B;IAChC,KACE,4MAAsB,SAAS;QAC7B,4BAA4B;IAChC;IACJ,KAAK,KAAK,CAAC;IACX,qLAAmB,GAAG,CAAC,SAAS;AACpC"}},
    {"offset": {"line": 2047, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2052, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/utils/is-dom-keyframes.mjs"],"sourcesContent":["function isDOMKeyframes(keyframes) {\n    return typeof keyframes === \"object\" && !Array.isArray(keyframes);\n}\n\nexport { isDOMKeyframes };\n"],"names":[],"mappings":";;;AAAA,SAAS,eAAe,SAAS;IAC7B,OAAO,OAAO,cAAc,YAAY,CAAC,MAAM,OAAO,CAAC;AAC3D"}},
    {"offset": {"line": 2059, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2064, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs"],"sourcesContent":["import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    stop() {\n        this.runAll(\"stop\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n"],"names":[],"mappings":";;;;;;;;AAGA,MAAM;IACF,YAAY,UAAU,CAAE;QACpB,IAAI,CAAC,UAAU,GAAG,WAAW,MAAM,CAAC;IACxC;IACA,KAAK,SAAS,EAAE,QAAQ,EAAE;QACtB,OAAO,QAAQ,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,KAAK,CAAC;IAC9D;IACA;;KAEC,GACD,OAAO,QAAQ,EAAE;QACb,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,SAAS;IACvC;IACA,OAAO,QAAQ,EAAE,QAAQ,EAAE;QACvB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAK;YAC7C,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,SAAS,GAAG;QACnC;IACJ;IACA,eAAe,QAAQ,EAAE;QACrB,MAAM,YAAY,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YACnC,IAAI,kNAA4B,UAAU,cAAc,EAAE;gBACtD,UAAU,cAAc,CAAC;YAC7B,OACK;gBACD,UAAU,KAAK;gBACf,OAAO,qMAAgB,CAAC;oBACpB,UAAU,IAAI,GAAG,UAAU,QAAQ,GAAG;gBAC1C,GAAG;YACP;QACJ;QACA,OAAO;YACH,UAAU,OAAO,CAAC,CAAC,gBAAgB;gBAC/B,IAAI,gBACA;gBACJ,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI;YAC3B;QACJ;IACJ;IACA,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB;IACA,IAAI,KAAK,IAAI,EAAE;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ;IACxB;IACA,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB;IACA,IAAI,MAAM,KAAK,EAAE;QACb,IAAI,CAAC,MAAM,CAAC,SAAS;IACzB;IACA,IAAI,WAAW;QACX,IAAI,MAAM;QACV,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAK;YAC7C,MAAM,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ;QACnD;QACA,OAAO;IACX;IACA,OAAO,UAAU,EAAE;QACf,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,WAAa,QAAQ,CAAC,WAAW;IAC9D;IACA,OAAO;QACH,IAAI,CAAC,MAAM,CAAC;IAChB;IACA,QAAQ;QACJ,IAAI,CAAC,MAAM,CAAC;IAChB;IACA,OAAO;QACH,IAAI,CAAC,MAAM,CAAC;IAChB;IACA,SAAS;QACL,IAAI,CAAC,MAAM,CAAC;IAChB;IACA,WAAW;QACP,IAAI,CAAC,MAAM,CAAC;IAChB;AACJ"}},
    {"offset": {"line": 2146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2151, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/animate.mjs"],"sourcesContent":["import { resolveElements } from '../render/dom/utils/resolve-element.mjs';\nimport { visualElementStore } from '../render/store.mjs';\nimport { invariant } from '../utils/errors.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\nimport { isDOMKeyframes } from './utils/is-dom-keyframes.mjs';\nimport { animateTarget } from './interfaces/visual-element-target.mjs';\nimport { createVisualElement } from './utils/create-visual-element.mjs';\nimport { animateSingleValue } from './interfaces/single-value.mjs';\nimport { createAnimationsFromSequence } from './sequence/create.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\nfunction animateElements(elementOrSelector, keyframes, options, scope) {\n    const elements = resolveElements(elementOrSelector, scope);\n    const numElements = elements.length;\n    invariant(Boolean(numElements), \"No valid element provided.\");\n    const animations = [];\n    for (let i = 0; i < numElements; i++) {\n        const element = elements[i];\n        /**\n         * Check each element for an associated VisualElement. If none exists,\n         * we need to create one.\n         */\n        if (!visualElementStore.has(element)) {\n            /**\n             * TODO: We only need render-specific parts of the VisualElement.\n             * With some additional work the size of the animate() function\n             * could be reduced significantly.\n             */\n            createVisualElement(element);\n        }\n        const visualElement = visualElementStore.get(element);\n        const transition = { ...options };\n        /**\n         * Resolve stagger function if provided.\n         */\n        if (typeof transition.delay === \"function\") {\n            transition.delay = transition.delay(i, numElements);\n        }\n        animations.push(...animateTarget(visualElement, { ...keyframes, transition }, {}));\n    }\n    return new GroupPlaybackControls(animations);\n}\nconst isSequence = (value) => Array.isArray(value) && Array.isArray(value[0]);\nfunction animateSequence(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = createAnimationsFromSequence(sequence, options, scope);\n    animationDefinitions.forEach(({ keyframes, transition }, subject) => {\n        let animation;\n        if (isMotionValue(subject)) {\n            animation = animateSingleValue(subject, keyframes.default, transition.default);\n        }\n        else {\n            animation = animateElements(subject, keyframes, transition);\n        }\n        animations.push(animation);\n    });\n    return new GroupPlaybackControls(animations);\n}\nconst createScopedAnimate = (scope) => {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(valueOrElementOrSequence, keyframes, options) {\n        let animation;\n        if (isSequence(valueOrElementOrSequence)) {\n            animation = animateSequence(valueOrElementOrSequence, keyframes, scope);\n        }\n        else if (isDOMKeyframes(keyframes)) {\n            animation = animateElements(valueOrElementOrSequence, keyframes, options, scope);\n        }\n        else {\n            animation = animateSingleValue(valueOrElementOrSequence, keyframes, options);\n        }\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n};\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAWA,SAAS,gBAAgB,iBAAiB,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK;IACjE,MAAM,WAAW,+MAAgB,mBAAmB;IACpD,MAAM,cAAc,SAAS,MAAM;IACnC,4KAAU,QAAQ,cAAc;IAChC,MAAM,aAAa,EAAE;IACrB,IAAK,IAAI,IAAI,GAAG,IAAI,aAAa,IAAK;QAClC,MAAM,UAAU,QAAQ,CAAC,EAAE;QAC3B;;;SAGC,GACD,IAAI,CAAC,qLAAmB,GAAG,CAAC,UAAU;YAClC;;;;aAIC,GACD,wNAAoB;QACxB;QACA,MAAM,gBAAgB,qLAAmB,GAAG,CAAC;QAC7C,MAAM,aAAa;YAAE,GAAG,OAAO;QAAC;QAChC;;SAEC,GACD,IAAI,OAAO,WAAW,KAAK,KAAK,YAAY;YACxC,WAAW,KAAK,GAAG,WAAW,KAAK,CAAC,GAAG;QAC3C;QACA,WAAW,IAAI,IAAI,uNAAc,eAAe;YAAE,GAAG,SAAS;YAAE;QAAW,GAAG,CAAC;IACnF;IACA,OAAO,+MAA0B;AACrC;AACA,MAAM,aAAa,CAAC,QAAU,MAAM,OAAO,CAAC,UAAU,MAAM,OAAO,CAAC,KAAK,CAAC,EAAE;AAC5E,SAAS,gBAAgB,QAAQ,EAAE,OAAO,EAAE,KAAK;IAC7C,MAAM,aAAa,EAAE;IACrB,MAAM,uBAAuB,+MAA6B,UAAU,SAAS;IAC7E,qBAAqB,OAAO,CAAC,QAA4B;YAA3B,EAAE,SAAS,EAAE,UAAU,EAAE;QACnD,IAAI;QACJ,IAAI,wMAAc,UAAU;YACxB,YAAY,gNAAmB,SAAS,UAAU,OAAO,EAAE,WAAW,OAAO;QACjF,OACK;YACD,YAAY,gBAAgB,SAAS,WAAW;QACpD;QACA,WAAW,IAAI,CAAC;IACpB;IACA,OAAO,+MAA0B;AACrC;AACA,MAAM,sBAAsB,CAAC;IACzB;;KAEC,GACD,SAAS,cAAc,wBAAwB,EAAE,SAAS,EAAE,OAAO;QAC/D,IAAI;QACJ,IAAI,WAAW,2BAA2B;YACtC,YAAY,gBAAgB,0BAA0B,WAAW;QACrE,OACK,IAAI,8MAAe,YAAY;YAChC,YAAY,gBAAgB,0BAA0B,WAAW,SAAS;QAC9E,OACK;YACD,YAAY,gNAAmB,0BAA0B,WAAW;QACxE;QACA,IAAI,OAAO;YACP,MAAM,UAAU,CAAC,IAAI,CAAC;QAC1B;QACA,OAAO;IACX;IACA,OAAO;AACX;AACA,MAAM,UAAU"}},
    {"offset": {"line": 2246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2251, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/hooks/use-animated-state.mjs"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../../render/utils/setters.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { VisualElement } from '../../render/VisualElement.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nconst createObject = () => ({});\nclass StateVisualElement extends VisualElement {\n    build() { }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    resetTransform() { }\n    restoreTransform() { }\n    removeValueFromRenderState() { }\n    renderInstance() { }\n    scrapeMotionValuesFromProps() {\n        return createObject();\n    }\n    getBaseTargetFromProps() {\n        return undefined;\n    }\n    readValueFromInstance(_state, key, options) {\n        return options.initialState[key] || 0;\n    }\n    sortInstanceNodePosition() {\n        return 0;\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }) {\n        const origin = getOrigin(target, transition || {}, this);\n        checkTargetForNewValues(this, target, origin);\n        return { transition, transitionEnd, ...target };\n    }\n}\nconst useVisualState = makeUseVisualState({\n    scrapeMotionValuesFromProps: createObject,\n    createRenderState: createObject,\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\nfunction useAnimatedState(initialState) {\n    const [animationState, setAnimationState] = useState(initialState);\n    const visualState = useVisualState({}, false);\n    const element = useConstant(() => {\n        return new StateVisualElement({ props: {}, visualState, presenceContext: null }, { initialState });\n    });\n    useEffect(() => {\n        element.mount({});\n        return () => element.unmount();\n    }, [element]);\n    useEffect(() => {\n        element.update({\n            onUpdate: (v) => {\n                setAnimationState({ ...v });\n            },\n        }, null);\n    }, [setAnimationState, element]);\n    const startAnimation = useConstant(() => (animationDefinition) => {\n        return animateVisualElement(element, animationDefinition);\n    });\n    return [animationState, startAnimation];\n}\n\nexport { useAnimatedState };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAQA,MAAM,eAAe,IAAM,CAAC,CAAC,CAAC;AAC9B,MAAM;IACF,QAAQ,CAAE;IACV,6BAA6B;QACzB,OAAO;IACX;IACA,iBAAiB,CAAE;IACnB,mBAAmB,CAAE;IACrB,6BAA6B,CAAE;IAC/B,iBAAiB,CAAE;IACnB,8BAA8B;QAC1B,OAAO;IACX;IACA,yBAAyB;QACrB,OAAO;IACX;IACA,sBAAsB,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE;QACxC,OAAO,QAAQ,YAAY,CAAC,IAAI,IAAI;IACxC;IACA,2BAA2B;QACvB,OAAO;IACX;IACA,iCAAiC,KAAwC,EAAE;YAA1C,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG,QAAQ,GAAxC;QAC7B,MAAM,SAAS,uLAAU,QAAQ,cAAc,CAAC,GAAG,IAAI;QACvD,qMAAwB,IAAI,EAAE,QAAQ;QACtC,OAAO;YAAE;YAAY;YAAe,GAAG,MAAM;QAAC;IAClD;AACJ;AACA,MAAM,iBAAiB,+MAAmB;IACtC,6BAA6B;IAC7B,mBAAmB;AACvB;AACA;;;CAGC,GACD,SAAS,iBAAiB,YAAY;IAClC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,mKAAS;IACrD,MAAM,cAAc,eAAe,CAAC,GAAG;IACvC,MAAM,UAAU,uLAAY;QACxB,OAAO,IAAI,mBAAmB;YAAE,OAAO,CAAC;YAAG;YAAa,iBAAiB;QAAK,GAAG;YAAE;QAAa;IACpG;IACA,oKAAU;QACN,QAAQ,KAAK,CAAC,CAAC;QACf,OAAO,IAAM,QAAQ,OAAO;IAChC,GAAG;QAAC;KAAQ;IACZ,oKAAU;QACN,QAAQ,MAAM,CAAC;YACX,UAAU,CAAC;gBACP,kBAAkB;oBAAE,GAAG,CAAC;gBAAC;YAC7B;QACJ,GAAG;IACP,GAAG;QAAC;QAAmB;KAAQ;IAC/B,MAAM,iBAAiB,uLAAY,IAAM,CAAC;YACtC,OAAO,oNAAqB,SAAS;QACzC;IACA,OAAO;QAAC;QAAgB;KAAe;AAC3C"}},
    {"offset": {"line": 2348, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2353, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/optimized-appear/store.mjs"],"sourcesContent":["const appearAnimationStore = new Map();\n\nexport { appearAnimationStore };\n"],"names":[],"mappings":";;;AAAA,MAAM,uBAAuB,IAAI"}},
    {"offset": {"line": 2358, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2363, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs"],"sourcesContent":["const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n"],"names":[],"mappings":";;;AAAA,MAAM,gBAAgB,CAAC,IAAI,QAAU,CAAC,EAAE,GAAG,EAAE,EAAE,MAAM,CAAC"}},
    {"offset": {"line": 2368, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2373, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs"],"sourcesContent":["import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearAnimationStore } from './store.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nlet handoffFrameTime;\nfunction handoffOptimizedAppearAnimation(elementId, valueName, \n/**\n * Legacy arguments. This function is inlined as part of SSG so it can be there's\n * a version mismatch between the main included Motion and the inlined script.\n *\n * Remove in early 2024.\n */\n_value, _frame) {\n    const optimisedValueName = transformProps.has(valueName)\n        ? \"transform\"\n        : valueName;\n    const storeId = appearStoreId(elementId, optimisedValueName);\n    const optimisedAnimation = appearAnimationStore.get(storeId);\n    if (!optimisedAnimation) {\n        return null;\n    }\n    const { animation, startTime } = optimisedAnimation;\n    const cancelAnimation = () => {\n        appearAnimationStore.delete(storeId);\n        try {\n            animation.cancel();\n        }\n        catch (error) { }\n    };\n    /**\n     * If the startTime is null, this animation is the Paint Ready detection animation\n     * and we can cancel it immediately without handoff.\n     *\n     * Or if we've already handed off the animation then we're now interrupting it.\n     * In which case we need to cancel it.\n     */\n    if (startTime === null || window.HandoffComplete) {\n        cancelAnimation();\n        return null;\n    }\n    else {\n        /**\n         * Otherwise we're handing off this animation to the main thread.\n         *\n         * Record the time of the first handoff. We call performance.now() once\n         * here and once in startOptimisedAnimation to ensure we're getting\n         * close to a frame-locked time. This keeps all animations in sync.\n         */\n        if (handoffFrameTime === undefined) {\n            handoffFrameTime = performance.now();\n        }\n        /**\n         * We use main thread timings vs those returned by Animation.currentTime as it\n         * can be the case, particularly in Firefox, that currentTime doesn't return\n         * an updated value for several frames, even as the animation plays smoothly via\n         * the GPU.\n         */\n        return handoffFrameTime - startTime || 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n"],"names":[],"mappings":";;;;;;;;;;AAIA,IAAI;AACJ,SAAS,gCAAgC,SAAS,EAAE,SAAS,EAC7D;;;;;CAKC,GACD,MAAM,EAAE,MAAM;IACV,MAAM,qBAAqB,sMAAe,GAAG,CAAC,aACxC,cACA;IACN,MAAM,UAAU,gNAAc,WAAW;IACzC,MAAM,qBAAqB,iNAAqB,GAAG,CAAC;IACpD,IAAI,CAAC,oBAAoB;QACrB,OAAO;IACX;IACA,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG;IACjC,MAAM,kBAAkB;QACpB,iNAAqB,MAAM,CAAC;QAC5B,IAAI;YACA,UAAU,MAAM;QACpB,EACA,OAAO,OAAO,CAAE;IACpB;IACA;;;;;;KAMC,GACD,IAAI,cAAc,QAAQ,OAAO,eAAe,EAAE;QAC9C;QACA,OAAO;IACX,OACK;QACD;;;;;;SAMC,GACD,IAAI,qBAAqB,WAAW;YAChC,mBAAmB,YAAY,GAAG;QACtC;QACA;;;;;SAKC,GACD,OAAO,mBAAmB,aAAa;IAC3C;AACJ"}},
    {"offset": {"line": 2431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2436, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/optimized-appear/start.mjs"],"sourcesContent":["import { appearStoreId } from './store-id.mjs';\nimport { animateStyle } from '../animators/waapi/index.mjs';\nimport { optimizedAppearDataId } from './data-id.mjs';\nimport { handoffOptimizedAppearAnimation } from './handoff.mjs';\nimport { appearAnimationStore } from './store.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\n/**\n * A single time to use across all animations to manually set startTime\n * and ensure they're all in sync.\n */\nlet startFrameTime;\n/**\n * A dummy animation to detect when Chrome is ready to start\n * painting the page and hold off from triggering the real animation\n * until then. We only need one animation to detect paint ready.\n *\n * https://bugs.chromium.org/p/chromium/issues/detail?id=1406850\n */\nlet readyAnimation;\nfunction startOptimizedAppearAnimation(element, name, keyframes, options, onReady) {\n    // Prevent optimised appear animations if Motion has already started animating.\n    if (window.HandoffComplete) {\n        window.HandoffAppearAnimations = undefined;\n        return;\n    }\n    const id = element.dataset[optimizedAppearDataId];\n    if (!id)\n        return;\n    window.HandoffAppearAnimations = handoffOptimizedAppearAnimation;\n    const storeId = appearStoreId(id, name);\n    if (!readyAnimation) {\n        readyAnimation = animateStyle(element, name, [keyframes[0], keyframes[0]], \n        /**\n         * 10 secs is basically just a super-safe duration to give Chrome\n         * long enough to get the animation ready.\n         */\n        { duration: 10000, ease: \"linear\" });\n        appearAnimationStore.set(storeId, {\n            animation: readyAnimation,\n            startTime: null,\n        });\n    }\n    const startAnimation = () => {\n        readyAnimation.cancel();\n        const appearAnimation = animateStyle(element, name, keyframes, options);\n        /**\n         * Record the time of the first started animation. We call performance.now() once\n         * here and once in handoff to ensure we're getting\n         * close to a frame-locked time. This keeps all animations in sync.\n         */\n        if (startFrameTime === undefined) {\n            startFrameTime = performance.now();\n        }\n        appearAnimation.startTime = startFrameTime;\n        appearAnimationStore.set(storeId, {\n            animation: appearAnimation,\n            startTime: startFrameTime,\n        });\n        if (onReady)\n            onReady(appearAnimation);\n    };\n    if (readyAnimation.ready) {\n        readyAnimation.ready.then(startAnimation).catch(noop);\n    }\n    else {\n        startAnimation();\n    }\n}\n\nexport { startOptimizedAppearAnimation };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAOA;;;CAGC,GACD,IAAI;AACJ;;;;;;CAMC,GACD,IAAI;AACJ,SAAS,8BAA8B,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO;IAC7E,+EAA+E;IAC/E,IAAI,OAAO,eAAe,EAAE;QACxB,OAAO,uBAAuB,GAAG;QACjC;IACJ;IACA,MAAM,KAAK,QAAQ,OAAO,wNAAuB;IACjD,IAAI,CAAC,IACD;IACJ,OAAO,uBAAuB;IAC9B,MAAM,UAAU,gNAAc,IAAI;IAClC,IAAI,CAAC,gBAAgB;QACjB,iBAAiB,wMAAa,SAAS,MAAM;YAAC,SAAS,CAAC,EAAE;YAAE,SAAS,CAAC,EAAE;SAAC,EACzE;;;SAGC,GACD;YAAE,UAAU;YAAO,MAAM;QAAS;QAClC,iNAAqB,GAAG,CAAC,SAAS;YAC9B,WAAW;YACX,WAAW;QACf;IACJ;IACA,MAAM,iBAAiB;QACnB,eAAe,MAAM;QACrB,MAAM,kBAAkB,wMAAa,SAAS,MAAM,WAAW;QAC/D;;;;SAIC,GACD,IAAI,mBAAmB,WAAW;YAC9B,iBAAiB,YAAY,GAAG;QACpC;QACA,gBAAgB,SAAS,GAAG;QAC5B,iNAAqB,GAAG,CAAC,SAAS;YAC9B,WAAW;YACX,WAAW;QACf;QACA,IAAI,SACA,QAAQ;IAChB;IACA,IAAI,eAAe,KAAK,EAAE;QACtB,eAAe,KAAK,CAAC,IAAI,CAAC,gBAAgB,KAAK;IACnD,OACK;QACD;IACJ;AACJ"}},
    {"offset": {"line": 2513, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2518, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs"],"sourcesContent":["import { invariant } from '../../utils/errors.mjs';\nimport { setValues } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n"],"names":[],"mappings":";;;;;;;;;;AAIA,SAAS,cAAc,aAAa;IAChC,cAAc,MAAM,CAAC,OAAO,CAAC,CAAC,QAAU,MAAM,IAAI;AACtD;AACA;;CAEC,GACD,SAAS;IACL;;KAEC,GACD,IAAI,aAAa;IACjB;;KAEC,GACD,MAAM,cAAc,IAAI;IACxB,MAAM,WAAW;QACb,WAAU,aAAa;YACnB,YAAY,GAAG,CAAC;YAChB,OAAO,IAAM,KAAK,YAAY,MAAM,CAAC;QACzC;QACA,OAAM,UAAU,EAAE,kBAAkB;YAChC,4KAAU,YAAY;YACtB,MAAM,aAAa,EAAE;YACrB,YAAY,OAAO,CAAC,CAAC;gBACjB,WAAW,IAAI,CAAC,oNAAqB,eAAe,YAAY;oBAC5D;gBACJ;YACJ;YACA,OAAO,QAAQ,GAAG,CAAC;QACvB;QACA,KAAI,UAAU;YACV,4KAAU,YAAY;YACtB,OAAO,YAAY,OAAO,CAAC,CAAC;gBACxB,uLAAU,eAAe;YAC7B;QACJ;QACA;YACI,YAAY,OAAO,CAAC,CAAC;gBACjB,cAAc;YAClB;QACJ;QACA;YACI,aAAa;YACb,OAAO;gBACH,aAAa;gBACb,SAAS,IAAI;YACjB;QACJ;IACJ;IACA,OAAO;AACX"}},
    {"offset": {"line": 2577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2582, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs"],"sourcesContent":["import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA4BC,GACD,SAAS;IACL,MAAM,WAAW;IACjB,iNAA0B,SAAS,KAAK,EAAE,EAAE;IAC5C,OAAO;AACX;AACA,MAAM,eAAe"}},
    {"offset": {"line": 2628, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2633, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/framer-motion/dist/es/animation/hooks/use-animate.mjs"],"sourcesContent":["import { useConstant } from '../../utils/use-constant.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { createScopedAnimate } from '../animate.mjs';\n\nfunction useAnimate() {\n    const scope = useConstant(() => ({\n        current: null,\n        animations: [],\n    }));\n    const animate = useConstant(() => createScopedAnimate(scope));\n    useUnmountEffect(() => {\n        scope.animations.forEach((animation) => animation.stop());\n    });\n    return [scope, animate];\n}\n\nexport { useAnimate };\n"],"names":[],"mappings":";;;;;;;;;;AAIA,SAAS;IACL,MAAM,QAAQ,uLAAY,IAAM,CAAC;YAC7B,SAAS;YACT,YAAY,EAAE;QAClB,CAAC;IACD,MAAM,UAAU,uLAAY,IAAM,2LAAoB;IACtD,qMAAiB;QACb,MAAM,UAAU,CAAC,OAAO,CAAC,CAAC,YAAc,UAAU,IAAI;IAC1D;IACA,OAAO;QAAC;QAAO;KAAQ;AAC3B"}},
    {"offset": {"line": 2658, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}